<?xml version='1.0' encoding='UTF-8'?>
<metametadata-library>
	<imports>
		<import file="libs/dictionaries.mmdlib" prefix="dic"/>
		<import file="libs/guiConfig.mmdlib" prefix="gui"/>
	</imports>
	<nodes>
		<node id="LogicalNode" icon="icons/logical.png" sortChildren="false" name="logicalModel" label="Logical Model">
			<subNodes>
				<subNode min="1" id="InstanceModelNode" max="1"/>
				<subNode min="1" id="MasterModelsNode" max="1"/>
				<subNode min="1" id="dic.DicNode" max="1"/>
			</subNodes>
			<generators>
				<gen class="com.ataccama.ame.core.generators.XsltGenerator">
					<fileNameTemplate>Files/etc/nme-model.gen.xml</fileNameTemplate>
					<source>/</source>
					<parameters>
						<param source="/settings" name="settings"/>
					</parameters>
					<templatePath>xslt/gen_model_xml.xsl</templatePath>
				</gen>
			</generators>
			<description>Logical Model is used to set up almost all &quot;real-world&quot; objects in the MDM Hub, which are generated from the metadata description of all entities, relationships, and settings. It consists of several models describing particular data layers (the number of layers depends on user settings).&lt;br/&gt;
Based on the Logical Model, transformation DQC plans are derived for each particular entity: cleanse plan is created when at least one std_ prefixed column is defined, match is created when the matching layer is enabled, and merge is created when an entity exists on the Master Layer. These plans serve for transition between the logical layers.</description>
		</node>
		<node id="InstanceModelNode" icon="icons/entities.png" sortChildren="true" name="instanceModel" label="Instance Layer">
			<references>
				<reference parentId="tables/table/@name">
					<idRefs>
						<idRef childId="relationships/relationship/@parentTable"/>
						<idRef childId="relationships/relationship/@childTable"/>
					</idRefs>
				</reference>
				<reference parentId="dicTables/table/@name">
					<idRefs>
						<idRef childId="relationships/relationship/@parentTable"/>
						<idRef childId="relationships/relationship/@childTable"/>
					</idRefs>
				</reference>
			</references>
			<subNodes>
				<subNode min="1" id="InstanceRelationshipsNode" max="1"/>
				<subNode min="1" id="InstanceTablesNode" max="1"/>
				<subNode min="1" id="InstanceDictionaryTablesNode" max="1"/>
			</subNodes>
			<editors>
				<editor class="com.ataccama.ame.core.editors.RelationEditor">
					<tableTypes>
						<tableType name="Instance Entity">
							<tableContainerSelectorPath>tables</tableContainerSelectorPath>
							<tableNamePath>@name</tableNamePath>
							<columnSelectorPath>columns/column</columnSelectorPath>
							<columnDisplayTemplate>{@name}: {@type}</columnDisplayTemplate>
							<columnGroupPath>@role</columnGroupPath>
							<entityActions>
								<action label="Edit Entity..." selectorPath="."/><!--
								<action menu="true" label="Transformations" selectorPath="/plans/folder[@entity = $current/@name]/plan"/>
								<action menu="true" label="Physical tables" selectorPath="/database/*/physicalTable[@entity = $current/@name]"/>
								--></entityActions>
							<entityColorings>
								<coloring test="." color="#0080ff"/>
							</entityColorings>
						</tableType>
						<tableType name="Dictionary Entity">
							<tableContainerSelectorPath>dicTables</tableContainerSelectorPath>
							<tableNamePath>@name</tableNamePath>
							<columnSelectorPath>columns/column</columnSelectorPath>
							<columnDisplayTemplate>{@name}: {@type}</columnDisplayTemplate>
							<columnGroupPath>@role</columnGroupPath>
							<entityActions>
								<action label="Edit Entity..." selectorPath="."/><!--
								<action menu="true" label="Transformations" selectorPath="/plans/folder[@entity = $current/@name]/plan"/>
								<action menu="true" label="Physical tables" selectorPath="/database/*/physicalTable[@entity = $current/@name]"/>
								--></entityActions>
							<entityColorings>
								<coloring test="." color="#c71585"/>
							</entityColorings>
						</tableType>
					</tableTypes>
					<relationshipTypes>
						<relationshipType name="Relationship">
							<relationshipContainerSelectorPath>relationships</relationshipContainerSelectorPath>
							<relationshipNamePath>@name</relationshipNamePath>
							<relationshipParentPath>@parentTable</relationshipParentPath>
							<relationshipChildPath>@childTable</relationshipChildPath>
						</relationshipType>
					</relationshipTypes>
				</editor>
				<editor class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor targetNodePath="tables" class="com.ataccama.ame.core.editors.CreateChild" label="New Instance Entity">
		
		</editor>
				<editor targetNodePath="dicTables" class="com.ataccama.ame.core.editors.CreateChild" label="New Dictionary Entity">
		
		</editor>
				<editor class="com.ataccama.ame.core.imports.XmlStructureImporter" label="Import Logical/Physical PowerDesigner Model" xsltTemplate="xslt/import_instance_model.xsl">
					<debug>false</debug>
					<structure>
						<node containerPath="tables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,isSrc,isStd,isCio,isExp,isSco,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="dicTables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="relationships" matchTemplate="{@name}-{@parentTable}-{@childTable}" attributeFilter="name,parentTable,childTable,description" displayTemplate="Rel {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="foreignKey" additions="ACCEPT" matchTemplate="{@parentColumn}-{@childColumn}" attributeFilter="parentColumn,childColumn" displayTemplate="{@parentColumn}-&gt;{@childColumn}" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
					</structure>
				</editor>
				<editor class="com.ataccama.ame.core.imports.ConfigurableXmiStructureImporter" xsltTemplate="xslt/importXMI_instance_model.xsl">
					<debug>false</debug>
					<structure>
						<node containerPath="tables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="IGNORE">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,isSrc,isStd,isCio,isExp,isSco,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="dicTables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="relationships" matchTemplate="{@name}-{@parentTable}-{@childTable}" attributeFilter="name,parentTable,childTable" displayTemplate="Rel {@name}" deletions="IGNORE">
							<subNodes>
								<node containerPath="foreignKey" additions="ACCEPT" matchTemplate="{@parentColumn}-{@childColumn}" attributeFilter="parentColumn,childColumn" displayTemplate="{@parentColumn}-&gt;{@childColumn}" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
					</structure>
				</editor>
				<editor class="com.ataccama.ame.core.imports.DatabaseStructureImporter" label="Import Database Schema...">
					<entityContainerPath>tables</entityContainerPath>
					<entityNamePath>@name</entityNamePath>
					<columnContainerPath>columns</columnContainerPath>
					<columnNamePath>@name</columnNamePath>
					<columnTypePath>@type</columnTypePath>
					<columnSizePath>@size</columnSizePath>
					<relationContainerPath>relationships</relationContainerPath>
					<relationNamePath>@name</relationNamePath>
					<relationParentTablePath>@parentTable</relationParentTablePath>
					<relationChildTablePath>@childTable</relationChildTablePath>
					<relationParentColumnPath>@parentColumn</relationParentColumnPath>
					<relationChildColumnPath>@childColumn</relationChildColumnPath>
					<relationFKContainer>foreignKey</relationFKContainer>
				</editor>
			</editors>
			<description>Defines instance and/or dictionary entities, their relationships, and entity attributes defining the following logical data layers: L1 (i.e. Canonical Layer) to store source data, L2 to store cleansed data, and L3 to store match output information.</description>
		</node><!-- Logical data model: tables --><node id="InstanceTablesNode" icon="icons/tables.png" sortChildren="false" name="tables" label="Entities" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceTableNode" max="-1"/>
			</subNodes>
			<editors>
				
				
			</editors>
			<description>Basic definition of an instance entity: column names, properties, prefixes, descriptions, etc.</description>
		</node>
		<node id="InstanceTableNode" icon="icons/table.png" generated="false" name="table" label="{@name}" explorerLeaf="true">
			<attributes>
				<attribute name="name" label="Entity Name" type="string" required="true">
					<description>Name of the table (entity) in the MDM Hub &lt;i&gt;Logical Model&lt;/i&gt;.</description>
				</attribute>
				<attribute visible="false" name="type" label="Type" type="enum" required="true" enumValues="instance" defaultValue="instance">
					<description>&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;instance&lt;/kbd&gt; (default): use this option for typical business tables (entitites)&lt;/li&gt;
&lt;/ul&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Entity description</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="InstanceColumnsNode" max="1"/>
				<subNode min="1" id="PkValueNode" max="1"/>
				<subNode min="1" id="MatchingTabNode" max="1"/>
				<subNode min="1" id="AggregationTabNode" max="1"/>
				<subNode min="1" id="GeneratedInstanceMaxLengthNode" max="1"/>
				<subNode min="1" id="AdvancedTabNode" max="1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Entity"/>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>columns/column/@name|advanced/specialColumns/column/@name|advanced/historicalColumns/column/@name|advanced/oldValueColumns/column/@name</selectPath>
					<message>Duplicate column name!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[columns/column/@isPk=&#39;true&#39;]</expression>
					<message>Instance table {@name} must have some primary key defined!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[count(columns/column[@isPk=&#39;true&#39;])&gt;1 and columns/column[@name=&#39;source_id&#39;]]</expression>
					<message>If source_id is present in the table, only the source_id can be (and MUST be) marked as Primary key!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Instance table name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>maxLength/@maxInstTableLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxInstTableLength} char</message>
				</validation>
			</validations>
			<description>A particular table is a physical representation of an entity</description>
		</node>
		<node id="InstanceColumnsNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceColumnNode" max="-1"/>
			</subNodes>
			<validations>
				<validation message="Table should contain at least one column." class="com.ataccama.ame.core.validations.NotEmptyArrayValidator"/>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>../pkValue[(@valuepk &gt; 1000)]</expression>
					<message>Size of all Pks must be equal or lower than 1000.</message>
				</validation>
			</validations>
			<description>List of attributes defined for the particular entity</description>
		</node>
		<node id="InstanceColumnNode" inherits="GeneralColumnNode" name="column" label="{@name}:{@type}">
			<attributes>
				<attribute name="isPk" columnWidth="12" label="Primary Key" type="boolean" required="true" defaultValue="false">
					<description>Mark the specified attribute as Primary Key&lt;br/&gt;
Default engine name for PK is &lt;i&gt;source_id&lt;/i&gt;. &lt;br/&gt;
If compound or alternative primary key used, all original attributes are concatenated into &lt;i&gt;source_id&lt;/i&gt; attribute instead. 
To reduce duplicate information, there is a possibility to disable storing original attributes in Preference setting.</description>
				</attribute>
				<attribute name="isFk" columnWidth="12" label="Foreign Key" type="boolean" required="true" defaultValue="false">
					<description>Mark the specified attribute as Foreign Key&lt;br/&gt;
There is no default engine name, but &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; pattern is advised. Only the compound foreign key is concatenated into &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; attribute, but the name can be changed by the Alias setting on relationship.
If compound or alternative primary key is used, all original attributes are concatenated into &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; attribute, but the name can be changed by the Alias setting of the particular relationship.&lt;br/&gt;
To reduce duplicate information, there is a possibility to disable storing original attributes in Preference setting.</description>
				</attribute>
				<attribute name="isSrc" columnWidth="6" label="SRC" type="boolean" required="true" defaultValue="true">
					<description>Generate &lt;kbd&gt;src_&lt;/kbd&gt; (source) prefixed column in MDM Hub Physical Model for the specified attribute.&lt;br/&gt;
These attibutes are used to store source values only. The source values cannot be changed during the following processes.</description>
				</attribute>
				<attribute name="isStd" columnWidth="6" label="STD" type="boolean" required="true" defaultValue="true">
					<description>Generate &lt;kbd&gt;std_&lt;/kbd&gt; (standardized) prefixed column in MDM Hub Physical Model for the specified attribute.&lt;br/&gt;
These attibutes are used used to store cleansed, validated or standardized values only.</description>
				</attribute>
				<attribute name="isCio" columnWidth="6" label="CIO" type="boolean" required="true" defaultValue="false">
					<description>Generate &lt;kbd&gt;cio_&lt;/kbd&gt; (cleansed instance output) prefixed column in MDM Hub Physical Model for the specified attribute.&lt;br/&gt;
These attibutes are used used to store the best cleansed values available, i.e. std_ prefixed value is mapped into this column. If the value is not available, other pre-cleansed, partially cleansed or source values can be mapped into the CIO (in this order).</description>
				</attribute>
				<attribute name="isSco" columnWidth="6" label="SCO" type="boolean" required="true" defaultValue="false">
					<description>Generate &lt;kbd&gt;sco_&lt;/kbd&gt; (score) prefixed column in MDM Hub Physical Model for the specified attribute.&lt;br/&gt;
These attibutes are used used to store a numeric data quality penalty resulting from the cleansing process.</description>
				</attribute>
				<attribute name="isExp" columnWidth="6" label="EXP" type="boolean" required="true" defaultValue="false">
					<description>Generate &lt;kbd&gt;exp_&lt;/kbd&gt; (explanation) prefixed column in MDM Hub Physical Model for the specified attribute.&lt;br/&gt;
These attibutes are used used to store a textual data quality penalty resulting from the cleansing process. It explains numeric data quality penalty.</description>
				</attribute>
				<attribute name="label" columnWidth="25" label="GUI Label" type="string">
					<description>Enter alias name for this attribute to be shown in the GUI</description>
				</attribute>
				<attribute visible="true" name="refData" columnWidth="25" label="Reference Data" type="string">
					<description>Link the specified attribute to defined &lt;i&gt;Reference Data Dictionary&lt;/i&gt;. The specified attribute will be translated from source system value to mastered value</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/logicalModel/dictionary/tables/table[@instUse!=&#39;none&#39; or @loadInst=&#39;true&#39; or @usageValidation!=&#39;none&#39;]</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>
           			.[@refData!=&#39;&#39; and @type!=/logicalModel/dictionary/tables/table[@name=$current/@refData]/@masterCodeType]
           			</expression>
					<message>Type of column {@name}({@type}) and {@refData}({/logicalModel/dictionary/tables/table[@name=$current/@refData]/@masterCodeType}) must be same.</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>
           			.[(@isPk=&#39;true&#39; and (@isSrc=&#39;true&#39; or @isCio=&#39;true&#39; or @isStd=&#39;true&#39; or @isExp=&#39;true&#39; or @isSco=&#39;true&#39;)) or (@isFk=&#39;true&#39; and (@isSrc=&#39;true&#39; or @isCio=&#39;true&#39; or @isStd=&#39;true&#39; or @isExp=&#39;true&#39; or @isSco=&#39;true&#39;))]
           			</expression>
					<message>Primary or foreign key cannot have any of the defined prefixes.</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@isPk=&#39;true&#39; and @name=&#39;source_id&#39;]|.[@name!=&#39;source_id&#39;]</expression>
					<message>Source_id must be primary key if it is present in the model!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[(@name=&#39;source_id&#39; or @name=&#39;Source_id&#39; or @name=&#39;SOURCE_ID&#39; or @name=&#39;Source_Id&#39;) and @type=&#39;string&#39;]|.[not(@name=&#39;source_id&#39; or @name=&#39;Source_id&#39; or @name=&#39;SOURCE_ID&#39; or @name=&#39;Source_Id&#39;)]
					</expression>
					<message>Source_id column must be of the type STRING!!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[(@size &gt; 1000 and @isPk = &#39;true&#39;)]</expression>
					<message>Size of {@name} must be equal or lower than 1000.</message>
				</validation>
			</validations>
			<subNodes>
				
			
			</subNodes>
		</node>
		<node id="InstanceRelationshipsNode" icon="icons/graph_edge_directed.png" name="relationships" label="Relationships" explorerLeaf="false" expanded="false">
			<subNodes>
				<subNode min="0" id="InstanceRelationshipNode" max="-1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor targetNodePath="." class="com.ataccama.ame.core.editors.CreateChild" label="New Relationship">
			</editor>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>relationship/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for the relationship name!</message>
				</validation>
			</validations>
			<description>Basic definition of a relationship between two instance entities.&lt;br/&gt;
Please note the relationship is oriented from child to parent entity (N:1), i.e. it points from child to parent entity.</description>
		</node>
		<node id="InstanceRelationshipNode" icon="icons/graph_edge_directed.png" sortChildren="true" name="relationship" label="{@name}" explorerLeaf="true">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Relationship name, can be imported from an external modeling tool (e.g. party_has_contact)</description>
				</attribute>
				<attribute name="parentTable" label="Parent Entity" type="list" required="true">
					<description>Independent entity (e.g. party)</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>lower-case(ancestor::instanceModel/*/table/@name)</selectPath>
					</valuesProvider>
				</attribute>
				<attribute name="childTable" label="Child Entity" type="list" required="true">
					<description>Dependent entity (e.g. contact)</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>lower-case(ancestor::instanceModel/*/table/@name)</selectPath>
					</valuesProvider>
				</attribute>
				<attribute name="parentRole" label="Parent Role" type="string" required="false">
					<description>Optional parameter, used to override complex relationship name. Can be used in WebService calls to traverse between Entities (e.g. party)</description>
				</attribute>
				<attribute name="childRole" label="Child Role" type="string" required="false">
					<description>Optional parameter, used to override complex relationship name. Can be used in WebService calls to traverse between Entities (e.g. contacts)</description>
				</attribute>
				<attribute name="type" label="Relationship Type" type="enum" required="true" enumValues="Same System,Cross System" defaultValue="Same System">
					<description>Relationship types available:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;same system&lt;/kbd&gt; (default): relationship is defined within the same &lt;i&gt;Connected System&lt;/i&gt;. Use this option to separate same records (same &lt;kbd&gt;source_id&lt;/kbd&gt;) from different systems&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;cross system&lt;/kbd&gt;: relationship is defined across more &lt;i&gt;Connected Systems&lt;/i&gt;. Typically use this type for Reference data, dictionaries or manual Matching Exceptions.&lt;/li&gt;&lt;/ul&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Instance relationship description</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="ChildToParentNode" max="1"/>
				<subNode min="1" id="ParentToChildNode" max="1"/>
				<subNode min="1" id="AdvancedSettingsTabNode" max="1"/>
				<subNode min="1" id="InstanceForeignKeyNode" max="1"/>
				<subNode min="1" id="CopyAfterP2CNode" max="1"/>
				<subNode min="1" id="CopyAfterC2PNode" max="1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Relationship"/>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Relationship name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@parentRole</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Parent role {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@childRole</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Child role {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
			</validations>
			<description>Relationship definition</description>
		</node>
		<node id="InstanceForeignKeyNode" name="foreignKey" label="Foreign Key" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceForeignKeyItemNode" max="-1"/>
			</subNodes>
			<attributes>
				
				
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.NotEmptyArrayValidator">
					<message>At least one Foreign Key has to be defined!</message>
				</validation>
			</validations>
			<description>Primary and foreign key definition.</description>
		</node>
		<node id="InstanceForeignKeyItemNode" name="column" label="{@parentColumn} &lt;- {@childColumn}">
			<attributes>
				<attribute name="parentColumn" label="Parent Column" type="string" required="true">
					<description>Primary key of independent entity (e.g. &lt;i&gt;source_id&lt;/i&gt;).&lt;br/&gt;
Note: only columns marked as PK on parent table are shown.
&lt;!-- 1000 --&gt;</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>ancestor::instanceModel/*/table[lower-case(@name)=$current/ancestor::relationship/@parentTable]/columns/column[@isPk=&#39;true&#39;]</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="childColumn" label="Child Column" type="string" required="true">
					<description>Foreign key of dependent entity (e.g. &lt;i&gt;contact_source_id&lt;/i&gt;)&lt;br/&gt;
Note: only columns marked as FK on child table are shown.
&lt;!-- 1000 --&gt;
</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::instanceModel/*/table[lower-case(@name)=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@isFk=&#39;true&#39;]</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
			<description>Primary and foreign key definition.</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>ancestor::instanceModel/*/table[lower-case(@name)=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[lower-case(@name)=lower-case($current/ancestor::relationship/foreignKey/column/@parentColumn) and @size &lt;= 
           			ancestor::instanceModel/*/table[lower-case(@name)=lower-case($current/ancestor::relationship/@childTable)]/columns/column[lower-case(@name)=lower-case($current/ancestor::relationship/foreignKey/column/@childColumn)]/@size]</expression>
					<message>Size of Child Column has to have at least the same as Parent Column or greater.</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>ancestor::instanceModel/*/table[lower-case(@name)=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[lower-case(@name)=lower-case($current/ancestor::relationship/foreignKey/column/@parentColumn) and @type = 
           			ancestor::instanceModel/*/table[lower-case(@name)=lower-case($current/ancestor::relationship/@childTable)]/columns/column[lower-case(@name)=lower-case($current/ancestor::relationship/foreignKey/column/@childColumn)]/@type]</expression>
					<message>Type of Parent Column is not equal to type of Child Column.</message>
				</validation>
			</validations>
		</node>
		<node id="MasterModelsNode" icon="icons/elements.png" name="masterModels" label="Master Data Layers">
			<subNodes>
				<subNode min="0" id="MasterModelNode" max="-1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor targetNodePath="." class="com.ataccama.ame.core.editors.CreateChild" label="New Layer...">
		</editor>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[count(masterModel/guiConfig[@enableGui=&#39;true&#39;])=1]|.[count(masterModel/guiConfig[@enableGui=&#39;true&#39;])=0]</expression>
					<message>Only one master layer can be used for GUI</message>
				</validation>
			</validations>
			<description>Defines one or more Master Data Layers. Also allows to enabling the GUI for the defined layer.&lt;br/&gt;



This is the layer (L4) where the golden and silver records originate, furthermore different business rules can be used to create so called Business Domain View on mastered data. MDM Hub can handle more domain views based on different matching rules computed in the L3 layer.</description>
		</node>
		<node id="MasterModelNode" icon="icons/branch_element.png" name="masterModel" label="{@name}">
			<references>
				<reference parentId="masterTables/masterTable/@name">
					<idRefs>
						<idRef childId="relationships/relationship/@parentTable"/>
						<idRef childId="relationships/relationship/@childTable"/>
					</idRefs>
				</reference>
				<reference parentId="instanceTables/instanceTable/@name">
					<idRefs>
						<idRef childId="relationships/relationship/@parentTable"/>
						<idRef childId="relationships/relationship/@childTable"/>
					</idRefs>
				</reference>
			</references>
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Layer name</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Layer description</description>
				</attribute>
			</attributes>
			<editors>
				<editor class="com.ataccama.ame.core.editors.RelationEditor" label="Edit Schema">
					<tableTypes>
						<tableType icon="icons/table.png" name="Master Entity">
							<tableContainerSelectorPath>masterTables</tableContainerSelectorPath>
							<tableNamePath>@name</tableNamePath>
							<columnSelectorPath>columns/column</columnSelectorPath>
							<columnDisplayTemplate>{@name}: {@type}</columnDisplayTemplate>
							<entityColorings>
								<coloring color="#808080">
									<test>.[@entityRole=&quot;silver&quot;]</test>
								</coloring>
							</entityColorings>
						</tableType>
						<tableType icon="icons/table.png" name="Instance Entity">
							<tableContainerSelectorPath>instanceTables</tableContainerSelectorPath>
							<tableNamePath>@name</tableNamePath>
							<columnSelectorPath>.</columnSelectorPath>
							<columnDisplayTemplate>.</columnDisplayTemplate>
							<entityColorings>
								<coloring color="#0080ff">
									<test>.</test>
								</coloring>
							</entityColorings>
						</tableType>
					</tableTypes>
					<relationshipTypes>
						<relationshipType name="Relationship">
							<relationshipContainerSelectorPath>relationships</relationshipContainerSelectorPath>
							<relationshipNamePath>@name</relationshipNamePath>
							<relationshipParentPath>@parentTable</relationshipParentPath>
							<relationshipChildPath>@childTable</relationshipChildPath>
						</relationshipType>
					</relationshipTypes>
				</editor>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor targetNodePath="instanceTables" class="com.ataccama.ame.core.editors.CreateChild" label="New Instance Entity">
		<!-- Create child is used when you need to create new node. Standard property dialog will be opened in order to get information about the new node. 
		MMD configuration has following attributes:
class - com.ataccama.ame.core.editors.CreateChild
label - optional label for the command which will be displayed in the popup menu. 
		If not specified, the default label will be used.
targetNodePath - optional MD path expression identifying the parent node, where the child node will be edited. 
		The path is relative to the current node and if not specified the current node will be used. -->
		</editor>
				<editor targetNodePath="masterTables" class="com.ataccama.ame.core.editors.CreateChild" label="New Master Entity">
		<!-- Create child is used when you need to create new node. Standard property dialog will be opened in order to get information about the new node. 
		MMD configuration has following attributes:
class - com.ataccama.ame.core.editors.CreateChild
label - optional label for the command which will be displayed in the popup menu. 
		If not specified, the default label will be used.
targetNodePath - optional MD path expression identifying the parent node, where the child node will be edited. 
		The path is relative to the current node and if not specified the current node will be used. -->
		</editor>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Layer"/>
				<editor class="com.ataccama.ame.core.imports.XmlStructureImporter" label="Import Logical/Physical Power Designer Model" xsltTemplate="xslt/import_master_model.xsl">
					<debug>false</debug>
					<structure>
						<node containerPath="masterTables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,isCmo,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="instanceTables" matchTemplate="{@name}" attributeFilter="name,label,instanceTable" displayTemplate="Table {@name}" deletions="ACCEPT">
      
    </node>
						<node containerPath="relationships" matchTemplate="{@name}-{@parentTable}-{@childTable}" attributeFilter="name,parentTable,childTable,description,label" displayTemplate="Rel {@name}" deletions="ACCEPT">
							<subNodes>
								<node containerPath="foreignKey" additions="ACCEPT" matchTemplate="{@parentColumn}-{@childColumn}" attributeFilter="parentColumn,childColumn" displayTemplate="{@parentColumn}-&gt;{@childColumn}" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
					</structure>
				</editor>
				<editor class="com.ataccama.ame.core.imports.ConfigurableXmiStructureImporter" xsltTemplate="xslt/importXMI_master_model.xsl"><!--
Configuration of ConfigurableXmiStructureImporter  is very similar to XML importer. 
The model is first transformed into XML file, on this XML document is applied XLST 
transformation and the resulting XML document is parsed using structure information 
and commands are generated.

For more details about the structure see the description of XmlStructureImporter.

If the 'debug' parameter is set to 'true', in the project folder there will be created 
files 'xmi-debug-inputXml.xml' and 'xmi-debug-transformedXml.xml' containing input XML 
document before XSLT transformation and resulting XML document after XSLT transformation 
is executed.  
--><debug>false</debug>
					<structure>
						<node containerPath="masterTables" matchTemplate="{@name}" attributeFilter="name,type,description,label" displayTemplate="Table {@name}" deletions="IGNORE">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,type,size,isPk,isFk,isCmo,description,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="instanceTables" matchTemplate="{@name}" attributeFilter="name,type,description,label,instanceTable" displayTemplate="Table {@name}" deletions="IGNORE">
							<subNodes>
								<node containerPath="columns" additions="ACCEPT" matchTemplate="{@name}" attributeFilter="name,label" displayTemplate="Column {@name}: {@type}({@size})" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
						<node containerPath="relationships" matchTemplate="{@name}-{@parentTable}-{@childTable}" attributeFilter="name,parentTable,childTable, lable" displayTemplate="Rel {@name}" deletions="IGNORE">
							<subNodes>
								<node containerPath="foreignKey" additions="ACCEPT" matchTemplate="{@parentColumn}-{@childColumn}" attributeFilter="parentColumn,childColumn" displayTemplate="{@parentColumn}-&gt;{@childColumn}" deletions="ACCEPT">
        </node>
							</subNodes>
						</node>
					</structure>
				</editor>
			</editors>
			<subNodes>
				<subNode min="1" id="MasterRelationshipsNode" max="1"/>
				<subNode min="1" id="MasterTablesNode" max="1"/>
				<subNode min="1" id="VirtualInstanceTablesNode" max="1"/>
				<subNode min="1" id="gui.GuiConfig" max="1"/>
				<subNode min="1" id="GeneratedMasterMaxLengthNode" max="1"/>
			</subNodes>
			<generators>
				
			</generators>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[guiConfig/@enableGui=&#39;true&#39; and masterTables/masterTable/@topLevel=&#39;true&#39;]|.[guiConfig/@enableGui=&#39;true&#39; and instanceTables/instanceTable/@topLevel=&#39;true&#39;]|.[guiConfig/@enableGui=&#39;false&#39;]</expression>
					<message>Master layer used with GUI must have at least one top level entity defined!!</message>
				</validation>
			</validations>
			<description>Each Master Layer defines master and/or (virtual) instance entities, their relationships, and entity attributes defining the L4 logical layer to store merged output (i.e., golden or master records).</description>
		</node>
		<node id="VirtualInstanceTablesNode" abstract="false" sortChildren="false" name="instanceTables" label="Instance Entities" expanded="true">
			<subNodes>
				<subNode min="0" id="VirtualInstanceTableNode" max="-1"/>
			</subNodes>
			<description>Basic definition of (virtual) instance entities such as link to the Instance Layer and the GUI labels (re-)definition.</description>
		</node>
		<node id="MasterTablesNode" sortChildren="false" name="masterTables" label="Master Entities" expanded="true">
			<subNodes>
				<subNode min="0" id="MasterTableNode" max="-1"/>
			</subNodes>
			<editors>
				
			</editors>
			<description>Basic definition of master entities, such as columns names, properties, prefixes, descriptions, etc. Also serves definition of the GUI labels.</description>
		</node>
		<node id="MasterRelationshipsNode" icon="icons/graph_edge_directed.png" name="relationships" label="Relationships" explorerLeaf="false" expanded="false">
			<subNodes>
				<subNode min="0" id="MasterRelationshipNode" max="-1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor targetNodePath="." class="com.ataccama.ame.core.editors.CreateChild" label="New Relationship">
		
		</editor>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>relationship/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for the relationship name!</message>
				</validation>
			</validations>
			<description>Definition of a relationship between two master, master and instance, and instance entities. Please note the relationship is oriented from a child to a parent entity (N:1), i.e. it points from a child to a parent entity.</description>
		</node>
		<node id="MasterRelationshipNode" icon="icons/graph_edge_directed.png" name="relationship" label="{@name}" explorerLeaf="true">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Master Layer Relationship name</description>
				</attribute>
				<attribute name="parentTable" label="Parent Entity" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::masterModel/masterTables/*|ancestor::masterModel/instanceTables/*</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
					<description>Independent entity (e.g. party)</description>
				</attribute>
				<attribute name="childTable" label="Child Entity" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::masterModel/masterTables/*|ancestor::masterModel/instanceTables/*</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
					<description>Dependent entity (e.g. contact)</description>
				</attribute>
				<attribute name="parentRole" label="Parent Role" type="string" required="false">
					<description>Optional parameter, used to override complex relationship name. Can be used in WebService calls to traverse between Entities, e.g. &lt;i&gt;party&lt;/i&gt;</description>
				</attribute>
				<attribute name="childRole" label="Child Role" type="string" required="false">
					<description>Optional parameter, used to override complex relationship name. Can be used in WebService calls to traverse between Entities, e.g. &lt;i&gt;contacts&lt;/i&gt;</description>
				</attribute>
				<attribute name="label" label="GUI Label" type="string" required="false">
					<description>Relationship name displayed in the GUI</description>
				</attribute>
				<attribute name="type" label="Relationship Type" type="enum" required="false" enumValues="Same System,Cross System,Extended Same System">
					<description>MDM Hub uses the relationship type on the Master Layer in the following default way:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;Master to Master and Master to Instance entity relationships&lt;/kbd&gt;: default value is Cross System type of relationship. Same System is not allowed&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Instance to Instance entity relationship&lt;/kbd&gt;: default value is Cross System type of relationship. Cross System relationship is also allowed and it is useful mainly for Reference Data dictionaries&lt;/li&gt;&lt;/ul&gt;

Relationship types available:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;none&lt;/kbd&gt; (default): default values are used as described above&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Cross System&lt;/kbd&gt;: cross system behavior has to be always used for relationships between Master Entities and between Master and Instance Entities &lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;Same System&lt;/kbd&gt;: relationship is defined within the same &lt;i&gt;Connected System&lt;/i&gt;.
&lt;li&gt;&lt;kbd&gt;Extended Same System&lt;/kbd&gt;: this option is useful only between two Instance Entities&lt;/li&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Master relationship description</description>
				</attribute>
			</attributes>
			<validations><!-- now because of MDA, self reference cannot be created at all. There should be some flag saying: do not use relationship for MDA--><validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/@childTable and ancestor::masterModel/masterTables/masterTable[@name=$current/@childTable]/@topLevel==&#39;false&#39;] </expression>
					<message>Self reference &#39;{@name}&#39; to &#39;{@parentTable}&#39; cannot be created because the entity is not topLevel entity!!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Relationship name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@parentRole</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Parent role {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@childRole</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Child role {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @childTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @type=&#39;Same System&#39;]</expression>
					<message>Master to master entity relationship &#39;{@name}&#39; should use Cross System or none type of relation!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @childTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @type=&#39;Same System&#39;]</expression>
					<message>Master to instance entity relationship &#39;{@name}&#39; should use Cross System or none type of relation!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@childTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @parentTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @type=&#39;Same System&#39;]</expression>
					<message>Instance to master entity relationship &#39;{@name}&#39; should use Cross System or none type of relation!</message>
				</validation><!-- INSTANCE TO INSTANCE VAZBA / good for warning or info message
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @childTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @type='Cross System']</expression>
					<message>Instance to instance entity relationship &#39;{@name}&#39; should use Cross System or none type of relation!</message>
				</validation>--><validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @childTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @type=&#39;Extended Same System&#39;]</expression>
					<message>Master to master entity relationship &#39;{@name}&#39; should not use Extended Same System!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@parentTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @childTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @type=&#39;Extended Same System&#39;]</expression>
					<message>Master to instance entity relationship &#39;{@name}&#39; should not use Extended Same System!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@childTable=$current/ancestor::masterModel/masterTables/masterTable/@name and @parentTable=$current/ancestor::masterModel/instanceTables/instanceTable/@name and @type=&#39;Extended Same System&#39;]</expression>
					<message>Instance to master entity relationship &#39;{@name}&#39; should not use Extended Same System!</message>
				</validation>
			</validations>
			<subNodes>
				<subNode min="1" id="MasterAdvancedSettingsNode" max="1"/>
				<subNode min="1" id="MasterForeignKeyNode" max="1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Relationship"/>
			</editors>
			<description>Master Layer Relationship definition</description>
		</node>
		<node id="MasterForeignKeyNode" visibleInParent="true" visible="true" name="foreignKey" label="Foreign Key" expanded="true">
			<subNodes>
				<subNode min="0" id="MasterForeignKeyItemNode" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[count(column)=1]</expression>
					<message>There can be only one foreign key!</message>
				</validation>
			</validations>
			<description>Primary and foreign key definition.</description>
		</node>
		<node id="MasterForeignKeyItemNode" visibleInParent="true" visible="true" name="column" label="{@parentColumn} &lt;- {@childColumn}" expanded="true">
			<attributes>
				<attribute name="parentColumn" label="Parent Column" type="string" required="false">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>
							ancestor::masterModel/masterTables/*[lower-case(@name)=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[@isPk=&#39;true&#39;]
							| 
							/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=lower-case($current/ancestor::relationship/@parentTable)]/@instanceTable)]/columns/column[@isPk=&#39;true&#39;]
							
						</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
					<description>Primary key of independent entity (&lt;i&gt;id&lt;/i&gt;).&lt;br/&gt;
Note: only columns marked as PK on parent table are shown.
&lt;!-- 1000 --&gt;</description>
				</attribute>
				<attribute name="childColumn" label="Child Column" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
							ancestor::masterModel/masterTables/*[lower-case(@name)=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@isFk=&#39;true&#39; or @name=&#39;master_id&#39;]
							| /preview/databaseModel/instanceTables/*[@name=
								lower-case($current/ancestor::masterModel/instanceTables/*[lower-case(@name)=lower-case($current/ancestor::relationship/@childTable)]/@instanceTable)
								]/columns/column[@isFk=&#39;true&#39; or @name=&quot;master_id&quot;]
						</selectPath>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
					<description>Foreign key of dependent entity (e.g. &lt;i&gt;party_id&lt;/i&gt;).&lt;br/&gt;
Note: only columns marked as FK on child table are shown.
&lt;!-- 1000 --&gt;</description>
				</attribute>
			</attributes>
			<validations>
			<!--
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>count($current/preceding-sibling::column)=0</expression>
					<message>There can be only one foreign key!</message>
				</validation>
			-->
				<!--<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>ancestor::masterModel/masterTables/masterTable[@name=$current/../@parentTable]/columns/column[@name=$current/@parentColumn and @type=$current/ancestor::logicalModel/instanceModel/tables/tab]</expression>
					<message>Parent column and child column must have the same data type!</message>
				</validation>-->
				
			</validations>
			<description>Primary and foreign key definition.</description>
		</node>
		<node id="VirtualInstanceTableNode" icon="icons/table.png" name="instanceTable" label="{@name} (instance)" explorerLeaf="true">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>(Virtual) Instance entity name</description>
				</attribute>
				<attribute name="instanceTable" label="Instance Entity" type="list" required="true">
					<description>Mapping to Instance Entity</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>lower-case(ancestor::logicalModel/instanceModel/*/table/@name)</selectPath>
					</valuesProvider>
				</attribute>
				<attribute name="label" label="GUI label" type="string" required="false">
					<description>Table (entity) name displayed in the GUI</description>
				</attribute>
				<attribute name="topLevel" label="Top Level" type="boolean" required="true" defaultValue="false">
					<description>Top level entity is used as a starting point to browse the data in the GUI.</description>
				</attribute>
			</attributes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Entity"/>
			</editors>
			<subNodes>
				<subNode min="1" id="GuiNode" max="1"/>
				<subNode min="1" id="GuiColumnsNode" max="1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Virtual table name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
			</validations>
			<description>Definition of (virtual) instance tables</description>
		</node>
		<node id="MasterTableNode" icon="icons/table.png" name="masterTable" label="{@name} ({@entityRole})" explorerLeaf="true">
			<attributes>
				<attribute name="name" columnWidth="30" label="Name" type="string" required="true">
					<description>Master Table Name</description>
				</attribute>
				<attribute name="instanceTable" columnWidth="20" label="Instance Entity" type="list" required="true">
					<description>Mapping to Instance Entity</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>lower-case(ancestor::logicalModel/instanceModel/tables/table/@name)</selectPath>
					</valuesProvider>
				</attribute>
				<attribute name="entityRole" columnWidth="20" label="Entity Role" type="enum" required="true" enumValues="golden,silver" defaultValue="silver">
					<description>&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;golden&lt;/kbd&gt;: entity matched and merged based on rules. Golden Record is built of the best values of all available matched records&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;silver&lt;/kbd&gt; (default): entity de-duplicated based on top level (golden) entity matching result&lt;/li&gt;
&lt;/ul&gt;</description>
				</attribute>
				<attribute visible="true" name="label" columnWidth="30" label="GUI Label" type="string" required="false">
					<description>Table (entity) name displayed in the GUI</description>
				</attribute>
				<attribute name="topLevel" columnWidth="12" label="GUI Top Level" type="boolean" required="true" defaultValue="false">
					<description>Top level entity is used as a starting point to browse the data in the GUI.</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Master table description</description>
				</attribute>
			</attributes>
			<validations>
				<validation message="Master table must have matching defined." class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>ancestor::logicalModel/instanceModel/tables/table[lower-case(@name)=lower-case($current/@instanceTable)]/matchingTab[@matching=&#39;true&#39;]</expression>
				</validation>
				<validation message="Master table &#39;{@name}&#39; must have primary key defined." class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>columns/column[@isPk=&#39;true&#39;]</expression>
				</validation>
				<validation message="Primary key of master table &#39;{@name}&#39; must be &#39;id&#39;." class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>columns/column[@isPk=&#39;true&#39; and not(@name=&#39;id&#39; or @name=&#39;ID&#39; or @name=&#39;Id&#39;)]</expression>
				</validation>
				<validation message="Primary key of master table &#39;{@name}&#39; must be &#39;long_int&#39; data type." class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>columns/column[@isPk=&#39;true&#39; and @type!=&#39;long_int&#39;]</expression>
				</validation><!-- validation disabled, because FK can be defined for dictionary entities as well
				<validation message="Foreign key of master table &#39;{@name}&#39; must be &#39;long_int&#39; data type." class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>columns/column[@isFk=&#39;true&#39; and @type!=&#39;long_int&#39;]</expression>
				</validation>--><validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@entityRole!=&#39;silver&#39; and @topLevel=&#39;true&#39;]|.[@topLevel=&#39;false&#39;]</expression>
					<message>Entity with &quot;silver&quot; role cannot be top level GUI entity!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>columns/column/@name|advanced/specialColumns/column/@name</selectPath>
					<message>Column name is not unique!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::masterModel/maxLength/@maxTableLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::masterModel/maxLength/@tableLength} char ({ancestor::masterModel/maxLength/@maxTableLength})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Master table name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
			</validations>
			<subNodes>
				<subNode min="1" id="MasterColumnsNode" max="1"/>
				<subNode min="1" id="GuiNode" max="1"/>
				<subNode min="1" id="MasterAdvancedNode" max="1"/>
				<subNode min="1" id="GuiEditSettingNode" max="1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.FileOpener" label="Open Merge Plan File" fileNameTemplate="Files/engine/trans/{@instanceTable}/{ancestor::masterModel/@name}_{@name}_merge.comp"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete table"/>
			</editors>
			<description>Master table definition</description>
		</node>
		<node id="MasterColumnsNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="MasterColumnNode" max="-1"/>
			</subNodes>
			<validations>
				<validation message="Table should contain at least one column" class="com.ataccama.ame.core.validations.NotEmptyArrayValidator"/>
			</validations>
			<description>Master Column definition of the Entity</description>
		</node>
		<node id="MasterColumnNode" name="column" label="{@name}:{@type}">
			<attributes>
				<attribute name="name" label="Name" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/logicalModel/instanceModel/tables/table[lower-case(@name)=lower-case($current/ancestor::masterTable/@instanceTable)]/columns/column/@name|.</selectPath>
					</valuesProvider>
					<description>Master Column Name</description>
				</attribute>
				<attribute name="type" columnWidth="12" label="Type" type="enum" required="true" enumValues="string,integer,datetime,day,long,boolean,float,long_int" defaultValue="string">
					<description>Column data type</description>
				</attribute>
				<attribute name="size" label="Size" type="integer">
					<description>Size of a new master attribute</description>
				</attribute>
				<attribute name="isPk" columnWidth="12" label="Primary Key" type="boolean" required="true" defaultValue="false">
					<description>Mark this attribute as a Primary Key&lt;br/&gt; 
An &lt;i&gt;id&lt;/i&gt; attribute of &lt;i&gt;long_int&lt;/i&gt; data type is expected for primary key.</description>
				</attribute>
				<attribute visible="true" name="isFk" columnWidth="12" label="Foreign Key" type="boolean" required="true" defaultValue="false">
					<description>Mark this attribute as Foreign Key&lt;br/&gt;
There is no default engine name, but &lt;i&gt;&amp;lt;parent_entity&amp;gt;_id&lt;/i&gt; pattern is advised. </description>
				</attribute>
				<attribute name="isCmo" columnWidth="12" label="CMO" type="boolean" required="true" defaultValue="true">
					<description>Mark this attribute as CMO&lt;br/&gt;
These attibutes are used used to store merge plan outputs, i.e. the best cleansed master output values available.</description>
				</attribute>
				<attribute name="label" columnWidth="20" label="GUI Label" type="string" required="false">
					<description>Define name displayed in the GUI</description>
				</attribute>
				<attribute name="refData" columnWidth="25" label="Reference Data" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/logicalModel/dictionary/tables/table[@loadMas=&#39;true&#39;]</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Link the attribute to the defined Reference Data Dictionary. This will create a relationship between an attribute and the Reference Data Dictionary to be able to provide additional information about the master code stored, e.g. name, description, etc.</description>
				</attribute>
				<attribute name="description" columnWidth="40" label="Description" type="string">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>
           			.[@refData!=&#39;&#39; and @type!=/logicalModel/dictionary/tables/table[@name=$current/@refData]/@masterCodeType]
           			</expression>
					<message>Type of column {@name}({@type}) and {@refData}({/logicalModel/dictionary/tables/table[@name=$current/@refData]/@masterCodeType}) must be same.</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[(@isPk=&#39;true&#39; and @isCmo=&#39;true&#39;) or (@isFk=&#39;true&#39; and @isCmo=&#39;true&#39;)]</expression>
					<message>Primary or foreign key cannot have prefix cmo_</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>generatedColumnMaxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::column/generatedColumnMaxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=&#39;string&#39; and @size!=&#39;&#39;]|.[@type!=&#39;string&#39;]
					</expression>
					<message>String columns must have a size defined! ({./@name})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size &gt; 0 or @type != &#39;string&#39;]</expression>
					<message>Length of the {@name} attribute has to be greater then 0!</message>
				</validation><!--<validation class="com.ataccama.ame.core.validations.MDPathValidation">
           			<expression>.[@size = '' or @type = 'string']</expression>
           			<message>Size shouldn't be defined for non-string attribute {@name}. If so, the size is ignored!</message>
       			</validation>--></validations>
			<subNodes>
				<subNode min="1" id="GeneratedInstanceColumnMaxLength" max="1"/>
			</subNodes>
			<description>Master column definition</description>
		</node>
		<node id="ParentToChildNode" name="parentToChild" newTab="true" label="Copy Columns from Parent -&gt; Child" expanded="true">
			<subNodes>
				<subNode min="0" id="ParentToChildItemNode" max="-1"/>
			</subNodes>
			<description>Definition of attributes copied from the parent to the child entity.&lt;br/&gt;
This feature is usually used to create master relationship between independent and dependent entities: e.g. &lt;i&gt;master_id&lt;/i&gt; attribute from party is copied to &lt;i&gt;contact_master_id&lt;/i&gt; attribute in &lt;i&gt;contact entity&lt;/i&gt;</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>column/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for attribute &#39;name&#39;</message>
				</validation>
			</validations>
		</node>
		<node id="ChildToParentNode" name="childToParent" newTab="true" label="Copy Columns from Child -&gt; Parent" expanded="true">
			<subNodes>
				<subNode min="0" id="ChildToParentItemNode" max="-1"/>
			</subNodes>
			<description>Definition of attributes copied from the child to the parent entity. Please note there is N:1 relationship!&lt;br/&gt;
This feature is usually used to copy attributes from dependent entity to the independent one for the matching purpose: e.g. &lt;i&gt;contact_values&lt;/i&gt; attribute is copied from the contact entity to the party entity and used for party matching purpose</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>column/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for attribute &#39;name&#39;</message>
				</validation>
			</validations>
		</node>
		<node id="ParentToChildItemNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="New Column" type="string" required="true">
					<description>Name of new column to be created in a child entity.</description>
				</attribute>
				<attribute name="type" label="Type" type="enum" required="true" enumValues="string,integer,datetime,day,long,boolean,float,long_int" defaultValue="string">
					<description>Data type of a new column.</description>
				</attribute>
				<attribute name="size" label="Size" type="integer">
					<description>Size of a new column.</description>
				</attribute>
				<attribute name="createInto" label="Create into" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>
		$current/ancestor::relationship/copyAfterP2C[@name!=&#39;&#39;]|		
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@childTable)]/plans/matchingPlan|
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@childTable)]/plans/mergingPlan|
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@childTable)]/dummy
		</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Define a transformation plan in which the new column will be added, e.g. &lt;i&gt;contact_match&lt;/i&gt;</description>
				</attribute>
				<attribute name="source" label="Source Column" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@parentTable)]/columns/*</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Name of column which will be used as a source for copy operation.</description>
				</attribute>
				<attribute name="filterExpression" label="Filter Expression" type="expression" extendable="true">
					<description>Optional setting to add a condition, when the copy between entities is performed. There are two dot sources &lt;i&gt;source&lt;/i&gt;, &lt;i&gt;target&lt;/i&gt;. E.g. &lt;i&gt;source.party_type=&#39;P&#39; and target.contact_type=&#39;EMAIL&#39;&lt;/i&gt;</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.ExpressionPathValuesProvider">
						<sources>
							<source dotSource="target" name="child">
								<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name!=&#39;&#39;]</selectPath>
								<nameTemplate>{lower-case(@name)}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{lower-case(@schema)}.{lower-case(@name)}</labelTemplate>
							</source>
							<source dotSource="source" name="parent">
								<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[@name!=&#39;&#39;]</selectPath>
								<nameTemplate>{lower-case(@name)}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{lower-case(@schema)}.{lower-case(@name)}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=&#39;string&#39; and @size!=&#39;&#39;]|.[@type!=&#39;string&#39;]
					</expression>
					<message>String columns must have a size defined! ({./@name})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=$current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[@name=$current/@source]/@type]
					</expression>
					<message>Copied column (from parent to child table) must have the same type and size as the parent column: {@source} - {ancestor::metadata/preview/databaseModel/instanceTables/*[@name=$current/ancestor::relationship/@parentTable]/columns/column[@name=$current/@source]/@type}({ancestor::metadata/preview/databaseModel/instanceTables/*[@name=$current/ancestor::relationship/@parentTable]/columns/column[@name=$current/@source]/@size})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size=$current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[@name=$current/@source]/@size]
           			
					</expression>
					<message>Copied column (from parent to child table) must have the same type and size as the parent column: {@source} - {ancestor::metadata/preview/databaseModel/instanceTables/*[@name=$current/ancestor::relationship/@parentTable]/columns/column[@name=$current/@source]/@type}({ancestor::metadata/preview/databaseModel/instanceTables/*[@name=$current/ancestor::relationship/@parentTable]/columns/column[@name=$current/@source]/@size})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size &gt; 0 or @type != &#39;string&#39;]</expression>
					<message>Length of the {@name} attribute has to be greater then 0!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" severity="warning" inverseCondition="true">
					<expression>.[@source = /logicalModel/instanceModel/dicTables/table[@name=$current/ancestor::relationship/@parentTable]/columns/column/@name]</expression>
					<message>Indices are not created when a column from a Dictionary Entity is used in the Copy Columns. To do so it significantly decreses a solution performance! For the best Copy Column performance use standard Instance Entity instead of Dictionary Entity.</message>
				</validation>
			</validations>
			<subNodes>
				
			</subNodes>
		</node>
		<node id="ChildToParentItemNode" name="column" newTab="true" label="{@name}" expanded="false">
			<attributes>
				<attribute name="name" label="New Column" type="string" required="true">
					<description>Name of new column to be created in a parent entity.</description>
				</attribute>
				<attribute name="type" label="Type" type="enum" required="true" enumValues="string,integer,datetime,day,long,boolean,float,long_int" defaultValue="string">
					<description>Data type of a new column.</description>
				</attribute>
				<attribute name="size" label="Size" type="integer" required="false">
					<description>Size of a new column.</description>
				</attribute>
				<attribute name="createInto" label="Create into" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>
		$current/ancestor::relationship/copyAfterC2P[@name!=&#39;&#39;]|
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@parentTable)]/plans/matchingPlan|
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@parentTable)]/plans/mergingPlan|
		/transformations/entity[@name=lower-case($current/ancestor::relationship/@parentTable)]/dummy
		</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Define a transformation plan in which the new column will be added, e.g. &lt;i&gt;party_match&lt;/i&gt;</description>
				</attribute>
				<attribute name="source" label="Source Column" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/*</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Name of column which will be used as a source for copy operation.</description>
				</attribute>
				<attribute name="method" label="Aggregation Method" type="enum" required="true" enumValues="concatenateDistinct,min,max,first" defaultValue="concatenateDistinct">
					<description>There are several options how to deal with multiple values caused by the 1:N relationship and how to copy them to parent entity:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;concatenateDistinct&lt;/kbd&gt; (default): all values from source attribute are concatenated using a defined separator.&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;min&lt;/kbd&gt;: minimal value from all source values is selected as a source&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;max&lt;/kbd&gt;: maximal value from all source values is selected as a source&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;first&lt;/kbd&gt;: only first value from all source values is selected as a source. This option is useful when 1:1 is expected&lt;/li&gt;&lt;/ul&gt;</description>
				</attribute>
				<attribute name="separator" label="Value Separator" type="string" required="false" defaultValue="~">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>.</selectPath>
						<staticValues>
							<entry value="~" label="~"/>
							<entry value="^~" label="^~"/>
							<entry value=" " label=" (space)"/>
						</staticValues>
					</valuesProvider>
					<description>Definition of separator that will be used when &lt;i&gt;concatenateDistinct&lt;/i&gt; method is selected.</description>
				</attribute>
				<attribute name="filterExpression" label="Filter Expression" type="expression">
					<description>Optional setting to add a condition, when the copy between entities is performed. There are two dot sources &lt;i&gt;source&lt;/i&gt;, &lt;i&gt;target&lt;/i&gt;. E.g. &lt;i&gt;source.party_type=&#39;P&#39; and target.contact_type=&#39;EMAIL&#39;&lt;/i&gt;</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.ExpressionPathValuesProvider">
						<sources>
							<source dotSource="source" name="child">
								<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name!=&#39;&#39;]</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
							<source dotSource="target" name="parent">
								<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::relationship/@parentTable)]/columns/column[@name!=&#39;&#39;]</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=&#39;string&#39; and @size!=&#39;&#39;]|.[@type!=&#39;string&#39;]
					</expression>
					<message>String columns must have a size defined! ({./@name})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=&#39;string&#39; and @method=&#39;concatenateDistinct&#39;]|.[@method!=&#39;concatenateDistinct&#39;]
					</expression>
					<message>Column {@name} copied using Concatenate Distinct method must be STRING!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@method!=&#39;concatenateDistinct&#39; and @type=$current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type]|.[@method=&#39;concatenateDistinct&#39;]
					</expression>
					<message>New copied column (chld-&gt;prnt) must have the same type as the source column in case concatenate distinct method is not used. Child column: {@source} - {ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type}({ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@size})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@method=&#39;concatenateDistinct&#39; and ($current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type != &#39;string&#39; and $current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type != &#39;integer&#39; and $current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type != &#39;long&#39; and $current/ancestor::metadata/preview/databaseModel/instanceTables/*[@name=lower-case($current/ancestor::relationship/@childTable)]/columns/column[@name=lower-case($current/@source)]/@type != &#39;long_int&#39;)]
					</expression>
					<message>You are using &quot;Concatenate Distinct&quot; method. Source column must be only of these types: String, Integer, LongInt or Long</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size &gt; 0 or @type != &#39;string&#39;]</expression>
					<message>Length of the {@name} attribute has to be greater then 0!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" severity="warning" inverseCondition="true">
					<expression>.[@source = /logicalModel/instanceModel/dicTables/table[@name=$current/ancestor::relationship/@childTable]/columns/column/@name]</expression>
					<message>Indices are not created when a column from a Dictionary Entity is used in the Copy Columns. To do so it significantly decreses a solution performance! For the best Copy Column performance use standard Instance Entity instead of Dictionary Entity.</message>
				</validation>
			</validations>
			<subNodes>
				
			</subNodes>
		</node>
		<node id="GeneralColumnNode" name="generalColumn">
			<attributes>
				<attribute name="name" columnWidth="20" label="Name" type="string" required="true">
					<description>Attribute name</description>
				</attribute>
				<attribute name="type" columnWidth="12" label="Type" type="enum" required="true" enumValues="string,integer,datetime,day,long,boolean,float,long_int" defaultValue="string">
					<description>Data type of an attribute</description>
				</attribute>
				<attribute name="size" columnWidth="12" label="Size" type="integer" required="false">
					<description>Size of an attribute</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>generatedColumnMaxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::column/generatedColumnMaxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@type=&#39;string&#39; and @size!=&#39;&#39;]|.[@type!=&#39;string&#39;]
					</expression>
					<message>String columns must have a size defined! ({./@name})</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size &gt; 0 or @type != &#39;string&#39;]</expression>
					<message>Length of the {@name} attribute has to be greater then 0!</message>
				</validation>
			</validations>
			<subNodes>
				<subNode min="1" id="GeneratedInstanceColumnMaxLength" max="1"/>
			</subNodes>
		</node>
		<node id="InstanceSpecialColumnsNode" name="specialColumns" label="Special Columns" expanded="true">
			<attributes>
				
				
			</attributes>
			<subNodes>
				<subNode min="0" id="InstanceSpecialColumnNode" max="-1"/>
			</subNodes>
			<description>This option is useful for handling attribute exceptions in &lt;i&gt;Instance layer&lt;/i&gt;. Columns can be placed into any logical layer (based on origin settings). These attributes are not touched when importing a model from an external case tool.</description>
		</node>
		<node id="InstanceHistoricalColumnsNode" name="historicalColumns" label="Previous Distinct Value Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceHistoricalColumnNode" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./column/@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
			</validations>
			<description>Define a column keeping a distinct list of previous values of any source column. These values are persisted in MDM Hub storage and usually used for matching purpose. </description>
		</node>
		<node id="InstanceOldValueColumnsNode" name="oldValueColumns" label="Old Value Columns" expanded="false">
			<subNodes>
				<subNode min="0" id="InstanceOldValueColumnNode" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./column/@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Column name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation>
			</validations>
			<description>Warning! This list of columns is NOT persisted in MDM Hub, however the columns are available in the &lt;i&gt;Transformation&lt;/i&gt; plans. Values are computed dynamically and can be used for further processing.</description>
		</node>
		<node id="InstanceSpecialColumnNode" inherits="GeneralColumnNode" name="column" label="{@name}:{@type}" expanded="false">
			<attributes>
				<attribute name="createInto" label="Create into" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/transformations/entity[@name=lower-case($current/ancestor::table/@name)]/plans/*[@layerName=&#39;instance&#39;]|
		/transformations/entity[@name=lower-case($current/ancestor::table/@name)]/dummy[not(/transformations/entity[@name=lower-case($current/ancestor::table/@name)]/plans/cleansingPlan)]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
						<staticValues>
							<entry value="load" label="load plans"/>
						</staticValues>
					</valuesProvider>
					<description>Define a transformation plan in which the new column will be added, e.g. &lt;i&gt;party_cleanse&lt;/i&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<subNodes>
				
			</subNodes>
		</node>
		<node id="InstanceHistoricalColumnNode" name="column" label="{@name}:{@type}">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Name of a new attribute</description>
				</attribute>
				<attribute name="size" label="Size" type="integer" required="true">
					<description>Size of a new attribute</description>
				</attribute>
				<attribute name="srcColumn" label="Source Column" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::table/@name)]/columns/column[@isFk=&#39;false&#39; and @origin!=&#39;internal&#39;]|ancestor::advanced/specialColumns/column</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
					<description>Name of an existing attribute to be used as a source attribute for previous value collecting.</description>
				</attribute>
				<attribute name="maxCnt" label="Max Count" type="integer" required="true">
					<description>Number of distinct values to be stored in the new attribute</description>
				</attribute>
				<attribute name="separator" label="Separator" type="string" required="true" defaultValue="~">
					<description>Separator of distinct values in the new attribute</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<validations><!--<validation class="com.ataccama.ame.core.validations.MDPathValidation">
           			<expression>.[@size > $current/@maxCnt]</expression>
           			<message></message>
       			</validation>--><validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@size &gt; 0 or @type != &#39;string&#39;]</expression>
					<message>Length of the {@name} attribute has to be greater then 0!</message>
				</validation>
			</validations>
		</node>
		<node id="InstanceOldValueColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" columnWidth="25" label="New Column Name" type="string" required="true">
					<description>Name of a new attribute containing old value e.g. &lt;i&gt;cio_client_status_old&lt;/i&gt;</description>
				</attribute>
				<attribute name="srcColumn" columnWidth="25" label="Source Column" type="list" required="true">
					<description>Name of an attribute containing current value,  e.g. &lt;i&gt;cio_client_status&lt;/i&gt;</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::table/@name)]/columns/column[@isFk=&#39;false&#39; and @origin!=&#39;internal&#39;]|ancestor::advanced/specialColumns/column|/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::table/@name)]/columns/column[@origin=&#39;copy_source&#39; or @origin=&#39;copy_clean&#39; or @origin=&#39;copy_match&#39;]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
			</validations>
		</node>
		<node id="MatchingTabNode" name="matchingTab" newTab="true" label="Matching" expanded="true">
			<subNodes>
				<subNode min="1" id="DefaultMatchingDefinitionNode" max="1"/>
				<subNode min="1" id="MatchingTabColumnsNode" max="1"/>
				<subNode min="1" id="MultipleMatchingNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="matching" label="Enable Matching" type="boolean" required="true" defaultValue="false">
					<description>Check this option to enable Matching process for this entity, i.e. a matching plan will be created</description>
				</attribute>
				<attribute name="enableIdentify" label="Enable Identify Web Service" type="boolean" required="true" defaultValue="false">
					<description>Check this option to enable a match plan in the Identify mode to perform the Identify native service for this entity. Please note that this option is only a prerequisite for the Identify native service. Service has to be defined separately in nme-services.xml configuration file manually.</description>
				</attribute>
			</attributes>
			<description>Matching process definition, including definition of additional columns</description>
		</node>
		<node id="MatchingTabColumnsNode" name="matchingTabColumns" label="Matching Columns" explorerLeaf="false" expanded="true">
			<subNodes>
				<subNode min="0" id="MatchingTabColumnNode" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>column/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for the matching column name!</message>
				</validation>
			</validations>
			<description>List of columns participating in Matching process</description>
		</node>
		<node id="MatchingTabColumnNode" inherits="GeneralColumnNode" name="column" label="{@name}:{@type}">
			<attributes>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
		</node>
		<node id="MasterSpecialColumnsNode" name="specialColumns" newTab="false" label="Special Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="MasterSpecialColumnNode" max="-1"/>
			</subNodes>
			<description>This option is useful for handling attribute exceptions in &lt;i&gt;Master Layer&lt;/i&gt;. These attributes are not touched when importing a model from an external case tool.</description>
		</node>
		<node id="MasterSpecialColumnNode" inherits="GeneralColumnNode" name="column" label="{@name}:{@type}" expanded="false">
			<attributes>
				<attribute name="label" label="GUI Label" type="string">
					<description>Table (entity) name displayed in the GUI</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
		</node>
		<node id="MasterAdvancedNode" name="advanced" newTab="true" label="Advanced Settings" expanded="true">
			<subNodes>
				<subNode min="1" id="MasterSpecialColumnsNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute height="3" name="inputFilterExpression" label="Input Filter Expression" type="expression">
					<description>Expression that allows filtering data input for the merge process. It might be used to omit non active records (e.g. &lt;i&gt;eng_active=true&lt;/i&gt;) or to exclude suspicious records that haven&#39;t been approved yet (e.g. &lt;i&gt;tmp_approved_flag=true&lt;/i&gt;)</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.ExpressionPathValuesProvider">
						<sources>
							<source name="parent"><!--<selectPath>/logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/columns/column</selectPath>--><selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@instanceTable)]/columns/column[@name!=&#39;&#39; and not(@name=preceding-sibling::column/@name)]</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
				<attribute name="groupColumn" label="Custom Grouping Column" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>
		ancestor::logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/matchingTab[@matching=&#39;true&#39; and multipleMatching/@disableDefault=&#39;false&#39;]/defaultMatchingDefinition |				
		ancestor::logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/matchingTab[@matching=&#39;true&#39; and multipleMatching/@disableDefault=&#39;true&#39;]/multipleMatching/matchingDefinitions/matchingDefinition
	</selectPath>
						<labelTemplate>{@masterIdColumn}</labelTemplate>
						<valueTemplate>{@masterIdColumn}</valueTemplate>
					</valuesProvider>
					<description>Custom definition of an attribute used to store result of matching process. Default attribute name: &lt;i&gt;master_id&lt;/i&gt; (only when default core matching attributes are used).&lt;br/&gt;
Custom grouping column definition is available on Instance Layer, Matching tab, Advanced Matching Configuration.
&lt;!--1030--&gt;</description>
				</attribute>
				<attribute name="customActivity" label="Custom Activity Tracking" type="boolean" required="true" defaultValue="false">
					<description>Custom definition of rules for activity calculation, i.e. overwrite &lt;i&gt;eng_active&lt;/i&gt; value in merge plan.</description>
				</attribute>
			</attributes>
			<description>Special types of columns with special behavior, such as independence from model importer and special features to influence merge process behavior.</description>
		</node>
		<node id="AdvancedTabNode" name="advanced" newTab="true" label="Advanced Settings" expanded="true">
			<subNodes>
				<subNode min="1" id="InstanceSpecialColumnsNode" max="1"/>
				<subNode min="1" id="InstanceHistoricalColumnsNode" max="1"/>
				<subNode min="1" id="InstanceOldValueColumnsNode" max="1"/>
			</subNodes>
			<description>Special types of columns with special behavior, such as independence on model importer and special features</description>
		</node>
		<node id="GuiNode" name="guiTab" newTab="true" label="GUI Settings" expanded="true">
			<subNodes>
				<subNode min="1" id="reduceESNode" max="1"/>
				<subNode min="1" id="ViewsNode" max="1"/>
				<subNode min="1" id="ComputedColumnsNode" max="1"/>
			</subNodes>
			<description>Definition of the GUI, e.g. views, computed columns and bridges.</description>
		</node>
		<node id="ComputedColumnsNode" sortChildren="false" name="computedColumns" newTab="false" label="Computed Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiComputedColumnNode" max="-1"/>
			</subNodes>
			<description>Allows creating user-defined computed columns to be used in the GUI views. This value is not stored in MDM hub storage, but computed from another column.</description>
		</node>
		<node id="GuiComputedColumnNode" name="column" label="{@label}">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Name of computed column</description>
				</attribute>
				<attribute name="label" label="Label" type="string" required="true">
					<description>Label of computed column</description>
				</attribute>
				<attribute name="dataType" label="Data Type" type="enum" required="true" enumValues="string,integer,datetime,day,long,boolean,float,long_int" defaultValue="string">
					<description>Data type of computed column</description>
				</attribute>
				<attribute syntax="dqc" name="producer" label="Expression" type="expression" required="true">
					<description>Expression creating the value to be shown in the GUI.&lt;br/&gt;
Standard DQC expressions can be used along with special MDA expressions:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;getMdaValString(&amp;lt;string_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;getMdaValInteger(&amp;lt;integer_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;getMdaValLong(&amp;lt;long_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;getMdaValFloat(&amp;lt;float_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;getMdaValDay(&amp;lt;day_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;getMdaValDatetime(&amp;lt;datetime_attribute&amp;gt;)&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="masterAndInstance"><!--/logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/columns/column--><!--<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterTable/@instanceTable]/columns/column</selectPath>            --><selectPath>/preview/databaseModel/masterTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@instanceTable) and @layerName=lower-case($current/ancestor::masterModel/@name)]/columns/column
                 | /preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@instanceTable)]/columns/column[@type!=&quot;long_int&quot; and not[@name=preceding-sibling::column/@name]]</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
				<attribute name="indexType" label="Index Type" type="enum" required="true" enumValues="ANALYZED,NOT_ANALYZED,BOTH,NONE" defaultValue="NONE">
					<description>Determines whether the computed column is stored in the Elasticsearch index and can be utilized by a search query.
Warning: if other then NONE Index Type is used for columns like age, time period etc., the value is the same since last update!
&lt;!-- 1050 --&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="string">
					<description>Computed attribute description</description>
				</attribute>
			</attributes>
			<description>Definition of computed attribute.</description>
		</node><!-- MN relationships BRIDGES --><node id="ViewsNode" sortChildren="true" name="views" newTab="false" label="Views" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiViewNode" max="-1"/>
			</subNodes>
			<description>The GUI template configuration</description>
		</node>
		<node id="GuiViewNode" abstract="true" name="view"/><!-- COLUMNS to be used in views --><node id="GuiViewSameEntityColumnListNode" name="columns" label="Column List" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiViewSameEntityColumnNode" max="-1"/>
			</subNodes>
			<description>Columns to be shown in a particular GUI view</description>
		</node>
		<node id="GuiViewSameEntityColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="Column Name" type="string" required="true">
					<description>Name of column to be displayed (using a defined label).</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
						/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::instanceTable/@instanceTable)]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;] | ancestor::instanceTable/guiTab/computedColumns/column|
						/preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name or @name=&#39;eng_last_update_date&#39;] | ancestor::masterTable/guiTab/computedColumns/column
						</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
		</node>
		<node id="GuiViewSameEntityEnhancedColumnListNode" name="columns" label="Column List" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiViewSameEntityEnhancedColumnNode" max="-1"/>
			</subNodes>
			<description>Columns to be shown in a particular GUI detail view</description>
		</node>
		<node id="GuiViewSameEntityEnhancedColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="Column Name" type="string" required="true">
					<description>Name of column to be displayed (using a defined label).</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
						/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::instanceTable/@instanceTable)]/columns/column[@name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name or @name=&#39;eng_last_update_date&#39;] | ancestor::instanceTable/guiTab/computedColumns/column|
						/preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name or @name=&#39;eng_last_update_date&#39;] | ancestor::masterTable/guiTab/computedColumns/column
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="lookupType" label="Lookup Type" type="string" required="false">
					<description>Allows to define a reference data view during edit/create actions.&lt;br/&gt;
Default view: WINDOW
&lt;!-- 1000 --&gt;</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>.[lower-case(../@name) =  /preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@refData!=&#39;&#39;]/@name]/ancestor::masterModel/guiConfig/guiConstants/guiLookups/guiLookup 				
	</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@label}</labelTemplate><!-- <message>Value does not match the list of possible options</message> --></valuesProvider>
				</attribute>
				<attribute name="format" label="Format" type="string" required="false">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>.[lower-case(../@name) =  /preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@dqcType=&#39;day&#39;]/@name]
    /ancestor::masterModel/guiConfig/guiConstants/guiAttributeFormats/guiAttributeFormat[@dqcType=&#39;day&#39;] | 
    .[lower-case(../@name) =  /preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@dqcType=&#39;datetime&#39;]/@name]
    /ancestor::masterModel/guiConfig/guiConstants/guiAttributeFormats/guiAttributeFormat[@dqcType=&#39;day&#39; or @dqcType=&#39;datetime&#39;]|
    .[lower-case(../@name) = &#39;eng_last_update_date&#39;]/ancestor::masterModel/guiConfig/guiConstants/guiAttributeFormats/guiAttributeFormat[@dqcType=&#39;day&#39; or @dqcType=&#39;datetime&#39;]|
    .[lower-case(../@name) =  /preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@dqcType=&#39;integer&#39; or @dqcType=&#39;long&#39;]/@name]
    /ancestor::masterModel/guiConfig/guiConstants/guiAttributeFormats/guiAttributeFormat[@dqcType=&#39;anyNumber&#39;]|
     .[lower-case(../@name) =  /preview/databaseModel/masterTables/physicalTable[@layerName=lower-case($current/ancestor::masterModel/@name) and @name=lower-case($current/ancestor::masterTable/@name)]/columns/column[@dqcType=&#39;float&#39;]/@name]
    /ancestor::masterModel/guiConfig/guiConstants/guiAttributeFormats/guiAttributeFormat[@dqcType=&#39;float&#39;]
    
    </selectPath><!--  --><valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@label}</labelTemplate><!-- <message>Value does not match the list of possible options</message> --></valuesProvider>
					<description>Allows to define format of record to be shown in GUI&lt;br/&gt;
Note: it is applicable only for day or datetime attributes.
&lt;!-- 1000 --&gt;</description>
				</attribute>
			</attributes>
		</node>
		<node id="GuiViewRelatedEntityColumnListNode" name="columns" label="Column List" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiViewRelatedEntityColumnNode" max="-1"/>
			</subNodes>
			<description>Columns to be shown in a particular GUI view
</description>
		</node>
		<node id="GuiViewRelatedEntityColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="Column Name" type="string" required="true">
					<description>Name of column to be displayed using a defined label.</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/masterTables/masterTable[@name=/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/relationships/relationship[@name=$current/../../../../../@relationship]/@childTable]/columns/column
|
/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/relationships/relationship[@name=$current/../../../../../@relationship]/@childTable]/columns/column
<!--
/preview/databaseModel/masterTables/physicalTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::masterTable/@name)]/@childTable]/columns/column[@name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name or @name=&#39;eng_last_update_date&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::masterTable/@name)]/@parentTable]/columns/column[@name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name or @name=&#39;eng_last_update_date&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::instanceTable/@name)]/@parentTable]/@instanceTable)]/columns/column[@name=&#39;source_id&#39; or @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name]
|
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::instanceTable/@name)]/@childTable]/@instanceTable)]/columns/column[@name=&#39;source_id&#39; or @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name]
|
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::masterTable/@name)]/@parentTable]/@instanceTable)]/columns/column[@name=&#39;source_id&#39; or @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name or @origin=&#39;match&#39; or @origin=&#39;internal_match&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::masterTable/@name)]/@childTable]/@instanceTable)]/columns/column[@name=&#39;source_id&#39; or @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name or @origin=&#39;match&#39; or @origin=&#39;internal_match&#39;]
| 
ancestor::masterModel/instanceTables/instanceTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::instanceTable/@name)]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::instanceTable/@name)]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::masterTable/@name)]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::masterTable/@name)]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @parentTable = lower-case($current/ancestor::masterTable/@name)]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::masterTable/@name)]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[lower-case(@name) = /preview/guiPreview/masterModels/model/relationships/relationship[@name = lower-case($current/../../../../../@relationship) and @childTable = lower-case($current/ancestor::instanceTable/@name)]/@parentTable]/guiTab/computedColumns/column
-->
</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
			<description>Listed columns to be show as a part of list view</description>
		</node><!-- VIEW GROUPS --><node id="GuiGridViewNode" name="gridView" label="Grid View">
			<subNodes>
				<subNode min="1" id="GuiViewSameEntityColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="allColumns" label="All Columns" type="boolean" required="true" defaultValue="true">
					<description>Display all available columns of the entity</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@allColumns=&#39;false&#39;]/columns/column|.[@allColumns=&#39;true&#39;]</expression>
					<message>Grid view has no defined columns!</message>
				</validation>
			</validations>
			<description>Definition of grid view, i.e. search result view
&lt;!-- currently not used --&gt;
&lt;!-- temporary disabled, used to be inherited by GuiViewNode --&gt;</description>
		</node>
		<node id="GuiDetailViewNode" inherits="GuiViewNode" name="detailView" label="Detail View">
			<subNodes>
				<subNode min="1" id="GuiDetailGroupsNode" max="1"/>
			</subNodes>
			<description>Definition of record detail view</description>
		</node>
		<node id="GuiEditViewNode" visibleInParent="false" visible="false" name="editView" label="Edit View">
			<subNodes>
				<subNode min="1" id="GuiEditGroupsNode" max="1"/>
			</subNodes>
			<description>&lt;!-- temporary disabled, used to be inherited by GuiViewNode --&gt;</description>
		</node>
		<node id="GuiEditMnDetailViewNode" visibleInParent="false" visible="false" name="editMnDetailView" label="Edit Mn Detail View">
			<subNodes>
				<subNode min="1" id="GuiDetailGroupsNode" max="1"/>
			</subNodes>
			<description>&lt;!-- temporary disabled, used to be inherited by GuiViewNode --&gt;</description>
		</node>
		<node id="GuiHistoryViewNode" name="historyView" label="History View">
			<subNodes>
				<subNode min="1" id="GuiViewSameEntityColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="allColumns" label="All Columns" type="boolean" required="true" defaultValue="false">
					<description>Display all available columns of the entity</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@allColumns=&#39;false&#39;]/columns/column|.[@allColumns=&#39;true&#39;]</expression>
					<message>History view has no defined columns!</message>
				</validation>
			</validations>
			<description>Definition of history view
&lt;!-- temporary disabled, used to be inherited by GuiViewNode --&gt;</description>
		</node>
		<node id="GuiCartViewNode" name="cartView" label="Favorites View">
			<subNodes>
				<subNode min="1" id="GuiViewSameEntityColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="allColumns" label="All Columns" type="boolean" required="true" defaultValue="false">
					<description>Display all available columns of the entity</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@allColumns=&#39;false&#39;]/columns/column|.[@allColumns=&#39;true&#39;]</expression>
					<message>Cart view has no defined columns!</message>
				</validation>
			</validations>
			<description>Definition of favorites view
&lt;!-- temporary disabled, used to be inherited by GuiViewNode --&gt;</description>
		</node>
		<node id="GuiBreadcrumbViewNode" inherits="GuiViewNode" name="breadcrumbView" label="Breadcrumb View">
			<subNodes>
				<subNode min="1" id="GuiViewSameEntityColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute visible="false" name="allColumns" label="All Columns" type="boolean" required="true" defaultValue="false">
					<description>Display all available columns of the entity</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[@allColumns=&#39;false&#39;]/columns/column|.[@allColumns=&#39;true&#39;]</expression>
					<message>Breadcrumb view has no defined columns!</message>
				</validation>
			</validations>
			<description>Definition of Breadcrumb view</description>
		</node><!-- <node id="GuiHierarchyViewNode" inherits="GuiViewNode" name="hierarchyView" label="Hierarchy View">
			<subNodes>
			
			
			
			
			
			<subNode min="1" id="GuiViewSameEntityColumnListNode" max="1"/>
			</subNodes>
		<attributes>
				<attribute name="allColumns" label="All Columns" type="boolean" required="true" defaultValue="false">
					<description>Display all available columns of the entity</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
           			<expression>.[@allColumns=&#39;false&#39;]/columns/column|.[@allColumns=&#39;true&#39;]</expression>
           			<message>Breadcrumb view has no defined columns!</message>
       			</validation>
			</validations>
		<description>Definition of Hierarchy view</description>
		</node> --><node id="GuiDetailGroupsNode" name="groups" label="Groups" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiDetailGroupNode" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>*/@name</selectPath>
					<message>&#39;{.}&#39; is not unique Group Name!</message>
				</validation><!--<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>*/@label</selectPath>
					<message>&#39;{.}&#39; is not unique Group Label!</message>
				</validation>--></validations>
			<description>Definition of attribute groups to be shown in a separate template (box)</description>
		</node>
		<node id="GuiDetailGroupNode" abstract="true" name="group">
			<attributes>
				<attribute name="name" label="Group Name" type="string" required="true">
					<description>Technical name of group</description>
				</attribute>
				<attribute name="label" label="Group Label" type="string" required="true">
					<description>Label of group visible in the GUI</description>
				</attribute>
				<attribute name="viewCondition" label="View Condition" type="expression">
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="">
								<selectPath>
				/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@instanceTable) and @layerName=lower-case($current/ancestor::masterModel/@name)]/columns/column
                |/preview/databaseModel/masterTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@name) and @layerName=lower-case($current/ancestor::masterModel/@name)]/columns/column</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@dqcType}</dataTypeTemplate>
								<labelTemplate>{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
					<description>The condition that has to be fulfilled to show particular detail view in the GUI. It is useful to adjust any view based on a particular data type, e.g. you can show different set of columns for individual party and different set for company party.&lt;/br&gt;
E.g. cmo_type = &#39;C&#39; to display the view only for company.
&lt;!-- 10.5.0 --&gt; </description>
				</attribute>
			</attributes>
		</node>
		<node id="GuiDetailLabeledGroupNode" inherits="GuiDetailGroupNode" name="labeledGroup" label="Labeled Group">
			<subNodes>
				<subNode min="1" id="GuiViewSameEntityEnhancedColumnListNode" max="1"/>
			</subNodes>
			<description>Definition of Labeled Group view</description>
			<attributes>
				<attribute name="templatePosition" label="Template Position" type="enum" enumValues="left,right,bottom" defaultValue="left"/>
			</attributes>
		</node>
		<node id="GuiDetailLabeledRelatedListNode" inherits="GuiDetailGroupNode" name="labeledRelatedList" label="Labeled Related List">
			<subNodes><!-- todo tvy: now it is not possible to show any lable on 1:M connection in hierarchies, so it is pointless to have this configuration here
				<subNode min="1" id="GuiHierarchyNode" max="1"/> --><subNode min="1" id="GuiLinkedRecordsParameterNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="relationship" label="Relationship" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>
						ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@parentTable)=lower-case($current/ancestor::masterTable/@name)]|
						ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@childTable)=lower-case($current/ancestor::masterTable/@name)]|
						/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[lower-case(@destTable)=lower-case($current/ancestor::masterTable/@name) or lower-case(@destTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@srcTable)=lower-case($current/ancestor::masterTable/@name) or lower-case(@srcTable)=lower-case($current/ancestor::instanceTable/@name)]
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to related entity</description>
				</attribute>
				<attribute name="templatePosition" label="Template Position" type="enum" enumValues="left,right,bottom" defaultValue="right">
					<description>Position of the defined graphical &quot;box&quot; in the GUI&lt;br/&gt;
Default: right</description>
				</attribute>
			</attributes>
			<description>Definition of Labeled Related List for one to many relationship view
&lt;!-- 1000 and below --&gt;</description>
		</node>
		<node id="GuiDetailLabeledRelatedMNListNode" inherits="GuiDetailGroupNode" name="labeledRelatedMNList" label="Labeled Related MN List">
			<subNodes>
				<subNode min="1" id="GuiMNRelationRecordsParameterNode" max="1"/>
				<subNode min="1" id="GuiMNLinkedRecordsParameterNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="relationship" label="Relationship to Associative Entity" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>
						ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@parentTable)=lower-case($current/ancestor::masterTable/@name)]|
						ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@childTable)=lower-case($current/ancestor::masterTable/@name)]|
						/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[lower-case(@destTable)=lower-case($current/ancestor::masterTable/@name) or lower-case(@destTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@srcTable)=lower-case($current/ancestor::masterTable/@name) or lower-case(@srcTable)=lower-case($current/ancestor::instanceTable/@name)]
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to a &#39;MN entity&#39; that realizes many to many relationship</description>
				</attribute>
				<attribute name="entity_out" label="Destination Entity" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/logicalModel/masterModels/masterModel[lower-case(@name)=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable | /logicalModel/masterModels/masterModel[lower-case(@name)=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
					</valuesProvider>
					<description>Name of the entity, to which many to many relationship points. </description>
				</attribute>
				<attribute name="relationship_out" label="Relationship to Destination" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>
						ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/../@entity_out)]|
						ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/../@entity_out)]
						<!-- /logicalModel/masterModels/masterModel[@name=$current/ancestor::masterModel/@name]/relationships/relationship[@childTable=$current/ancestor::instanceTable/@name and @name!=$current/../@srcRelationship]|
						/logicalModel/masterModels/masterModel[@name=$current/ancestor::masterModel/@name]/relationships/relationship[@childTable=$current/ancestor::masterTable/@name and @name!=$current/../@srcRelationship] -->
						<!--|/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@destTable=$current/ancestor::masterTable/@name or @destTable=$current/ancestor::instanceTable/@name or @srcTable=$current/ancestor::masterTable/@name or @srcTable=$current/ancestor::instanceTable/@name]-->
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to related entity</description>
				</attribute>
				<attribute name="templatePosition" label="Template Position" type="enum" required="true" enumValues="left,right,bottom" defaultValue="left">
					<description>Position of the defined graphical &quot;box&quot; in the GUI&lt;br/&gt;
Default: left</description>
				</attribute>
			</attributes>
			<description>Definition of Labeled Related List for many to many relationship view
&lt;!-- 1000 and below --&gt;</description>
		</node>
		<node id="GuiDetailListGridGroupNode" inherits="GuiDetailGroupNode" name="listGrid" label="List Grid">
			<attributes>
				<attribute name="relationship" label="Relationship" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@parentTable)=lower-case($current/ancestor::masterTable/@name)]|
							ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@childTable)=lower-case($current/ancestor::masterTable/@name)]
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to related entity</description>
				</attribute>
				<attribute name="templatePosition" label="Template Position" type="enum" required="true" enumValues="left,right,bottom" defaultValue="bottom">
					<description>Position of the defined graphical &quot;box&quot; in the GUI&lt;br/&gt;
Default: bottom</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="GuiDetailListsNode" max="1"/>
			</subNodes>
			<description>Definition of List Grid view, i.e. it is mainly used to display related instances.
&lt;!-- 1000 and below --&gt;</description>
		</node><!-- EDIT GROUPS --><node id="GuiEditGroupsNode" name="groups" label="Groups" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditGroupNode" max="-1"/>
			</subNodes>
		</node>
		<node id="GuiEditGroupNode" abstract="true" name="group">
			<attributes>
				<attribute name="name" label="Group Name" type="string" required="true"/>
				<attribute name="label" label="Group Label" type="string" required="true"/>
			</attributes>
		</node>
		<node id="GuiEditBasicFormGroupNode" inherits="GuiEditGroupNode" name="basicForm" label="Basic Form">
			<subNodes>
				<subNode min="1" id="GuiEditBasicFormColumnListNode" max="1"/>
			</subNodes>
		</node>
		<node id="GuiEditBasicFormColumnListNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditBasicFormColumnNode" max="-1"/>
			</subNodes>
		</node>
		<node id="GuiEditBasicFormColumnNode" name="column" label="Column">
			<attributes>
				<attribute name="name" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
						/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::instanceTable/@instanceTable)]/columns/column | ancestor::instanceTable/guiTab/computedColumns/column|
						/preview/databaseModel/masterTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column | ancestor::masterTable/guiTab/computedColumns/column
						</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="defaultValue" type="string"/>
			</attributes>
		</node>
		<node id="GuiColumnsNode" name="columns" label="GUI Custom Labels" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiColumnNode" max="-1"/>
			</subNodes>
			<attributes>
				
			</attributes>
			<description>Re-definition of instance entity labels.&lt;br/&gt;
Otherwise, either a generated label or user-defined label from instance layer is used.</description>
		</node>
		<node id="GuiColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="Name" type="string">
					<description>Name of the attribute on the Instance Layer</description>
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::instanceTable/@instanceTable)]/columns/column[tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]</selectPath>
						<labelTemplate>{@name}</labelTemplate>
						<valueTemplate>{@name}</valueTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="customLabel" label="Custom Label" type="string">
					<description>Definition of a new label to be shown in the GUI</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column[@finalLabel !=&#39;&#39;]</expression>
					<message>Instance attribute label is not filled in (ON INSTANCE LAYER), please define custom label here(or fill in the instance label).</message>
				</validation>
			</validations>
		</node>
		<node id="GuiEditSettingNode" visibleInParent="true" visible="true" name="guiEdit" newTab="true" label="GUI Read-Write Settings" expanded="true">
			<attributes>
				<attribute visible="true" name="guiReadOnly" label="GUI Mode" type="enum" required="false" enumValues="use global setting (from GUI Configuration),Read-Only" defaultValue="use global setting (from GUI Configuration)">
					<description>Allows to change GUI Mode for the given entity. This setting overrides the global definition of the GUI mode. If it is not specified, global mode setting is used.&lt;br/&gt;
Typically, this setting should be used to set RO mode for a particular entity, while the other entities are globally se to RW mode.
&lt;!-- 1000 --&gt;</description>
				</attribute>
			</attributes>
			<validations>
				<!--
				todo tvy: seems to be obsolete - sid is no longer used  
				 <validation class="com.ataccama.ame.core.validations.MDPathValidation">
           			<expression>.[@sid!=&#39;&#39;]/editColumns/column|.[@sid=&#39;&#39; and not(editColumns/column)]</expression>
           			<message>If you want to edit some columns in GUI then set Source id!</message>
       			</validation> -->
       		</validations>
			<subNodes>
				<subNode min="1" id="GuiEditColumnsNode" max="1"/>
				<subNode min="1" id="GuiEditParentColumnsNode" max="1"/>
			</subNodes>
			<description>Use this setting when the GUI is in read-write mode, i.e. operations like create, edit, deactivate are allowed.
&lt;!-- 100 and the following--&gt;</description>
		</node>
		<node id="GuiEditColumnsNode" name="editColumns" label="Editable Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditColumnNode" max="-1"/>
			</subNodes>
			<description>Setting that is required for edit and create actions only.&lt;br/&gt;
As a part of this configuration, master attributes are mapped to instance attributes (i.e. new GUI instance is created to keep changed/new data).</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[not(column) and ancestor::masterModel/guiConfig[@guiMode=&#39;Read-Write&#39; and @enableGui=&#39;true&#39; and (actions/@edit=&#39;true&#39; or actions/@create=&#39;true&#39;)] and ancestor::guiEdit[@guiReadOnly!=&#39;Read-Only&#39;]]</expression>
					<message>At least one Editable Column must be defined if the GUI/particular entity is in Read-Write mode and create or edit actions are allowed in GUI Configuration!</message>
				</validation>
			</validations>
		</node>
		<node id="GuiEditColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="name" label="Master Column" type="list" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column</selectPath><!-- and @isFk=&#39;false&#39; --><valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
					<description>Name of master column that is available for editing.</description>
				</attribute>
				<attribute name="nmeMapping" label="Source Column Mapping" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[@instanceTable=$current/ancestor::masterTable/@instanceTable]/@name)]/columns/column</selectPath><!-- and @isFk=&#39;false&#39; --><valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
					<description>Related MDM hub instance record&#39;s attribute to store edited values 
&lt;!-- 1000 --&gt;</description>
				</attribute>
			</attributes>
			<description>Setting that maps master attributes to instance attributes.</description>
		</node>
		<node id="GuiEditMnRelationGroupNode" inherits="GuiEditGroupNode" name="mnRelation" label="MN Relation">
			<subNodes>
				<subNode min="1" id="GuiEditMnRelationColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="relationship" label="Relationship" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@parentTable=$current/ancestor::masterTable/@name)]|
							ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@childTable=$current/ancestor::masterTable/@name)]
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to related entity</description>
				</attribute>
			</attributes>
		</node>
		<node id="GuiEditMnRelationColumnListNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditMnRelationColumnNode" max="-1"/>
			</subNodes>
		</node>
		<node id="GuiEditMnRelationColumnNode" name="column" label="Column">
			<attributes>
				<attribute name="name" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
			ancestor::masterModel/*/*[lower-case($current/../../../relatedEntity/@name) = lower-case(@name)]/columns/column
			|ancestor::masterModel/*/*[lower-case($current/../../../relatedEntity/@name) = lower-case(@name)]/guiTab/computedColumns/column
		
	</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
		</node>
		<node id="GuiEditChildRelationGroupNode" inherits="GuiEditGroupNode" name="childRelation" label="Child Relation">
			<subNodes>
				<subNode min="1" id="GuiEditChildRelationColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="relationship" label="Relationship" type="string" required="true">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider">
						<selectPath>ancestor::masterModel/relationships/relationship[lower-case(@parentTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@parentTable=$current/ancestor::masterTable/@name)]|
							ancestor::masterModel/relationships/relationship[lower-case(@childTable)=lower-case($current/ancestor::instanceTable/@name) or lower-case(@childTable=$current/ancestor::masterTable/@name)]
						</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
					<description>Name of relationship to be used to create link to related entity</description>
				</attribute>
			</attributes>
		</node>
		<node id="GuiEditChildRelationColumnListNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditChildRelationColumnNode" max="-1"/>
			</subNodes>
		</node>
		<node id="GuiEditChildRelationColumnNode" name="column" label="Column">
			<attributes>
				<attribute name="name" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
			ancestor::masterModel/*/*[lower-case($current/../../../relatedEntity/@name) = lower-case(@name)]/columns/column
			|ancestor::masterModel/*/*[lower-case($current/../../../relatedEntity/@name) = lower-case(@name)]/guiTab/computedColumns/column
		
	</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{@label} ({@name})</labelTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
		</node>
		<node id="GeneratedMasterMaxLengthNode" visibleInParent="false" sortChildren="false" visible="false" generated="true" name="maxLength" label="Max Length">
			<attributes>
				<attribute name="maxTableLength" type="integer"/>
				<attribute name="maxColumnLength" type="integer"/>
			</attributes>
		</node>
		<node id="GeneratedInstanceMaxLengthNode" visibleInParent="false" visible="false" generated="true" name="maxLength" label="Max Length">
			<attributes>
				<attribute name="maxInstTableLength" type="integer"/>
				<attribute name="maxColumnLength" type="integer"/>
				<attribute name="maxInstMatchTableLength" type="integer"/>
			</attributes>
		</node>
		<node id="GeneratedInstanceColumnMaxLength" visibleInParent="false" visible="false" generated="true" name="generatedColumnMaxLength" label="Max Length">
			<attributes>
				<attribute name="maxColumnLength" type="integer"/>
			</attributes>
		</node>
		<node id="InstanceDictionaryTablesNode" visibleInParent="true" visible="true" name="dicTables" label="Dictionary Entities" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceDictionaryTableNode" max="-1"/>
			</subNodes>
			<description>Basic definition of a dictionary entity: column names, properties, descriptions, etc.&lt;br/&gt; It is designed for code book or lookup type of entity. It has to be related to an instance entity using a 1:N relationship (dictionary entity is the parent).</description>
		</node>
		<node id="InstanceDictionaryTableNode" icon="icons/table.png" name="table" label="{@name}" explorerLeaf="true">
			<attributes>
				<attribute name="name" label="Entity name" type="string" required="true">
					<description>Dictionary table description</description>
				</attribute>
				<attribute visible="false" name="type" label="Type" type="enum" required="true" enumValues="dictionary" defaultValue="dictionary">
					<description>&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;instance&lt;/kbd&gt; (default): use this option for typical business tables (entitites)&lt;/li&gt;
&lt;/ul&gt;</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Dictionary entity description</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="InstanceDictionaryColumnsNode" max="1"/>
				<subNode min="1" id="AdvancedTabNode" max="1"/>
			</subNodes>
			<editors>
				<editor openModal="true" class="com.ataccama.ame.core.editors.PropertyEditor"/>
				<editor class="com.ataccama.ame.core.editors.DeleteChild" label="Delete Dictionary Entity"/>
			</editors>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>columns/column/@name|advanced/specialColumns/column/@name|advanced/historicalColumns/column/@name|advanced/oldValueColumns/column/@name</selectPath>
					<message>Duplicate column name!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation">
					<expression>.[columns/column/@isPk=&#39;true&#39;]</expression>
					<message>Instance table {@name} must have some primary key defined!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[count(columns/column[@isPk=&#39;true&#39;])&gt;1 and columns/column[@name=&#39;source_id&#39;]]</expression>
					<message>If source_id is present in the table, only the source_id can be (and MUST be) marked as Primary key!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.RegexpValidation">
					<selectPath>./@name</selectPath>
					<valueExpr>[\p{L}\p{Digit}_]+</valueExpr>
					<message>Instance dictionary table name {.} contains unsupported characters. Supported are: [a-zA-Z0-9_]</message>
				</validation><!-- 
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
  					<selectPath>@name</selectPath>
  					<maxLength>maxLength/@maxInstTableLength</maxLength>
  					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxInstTableLength} char</message>
				</validation>
				--></validations>
			<description>Dictionary entity definition</description>
		</node>
		<node id="InstanceDictionaryColumnsNode" name="columns" label="Columns" expanded="true">
			<subNodes>
				<subNode min="0" id="InstanceDictionaryColumnNode" max="-1"/>
			</subNodes>
			<description>List of attributes defined for the particular dictionary entity</description>
		</node>
		<node id="InstanceDictionaryColumnNode" inherits="GeneralColumnNode" name="column" label="{@name}">
			<attributes>
				<attribute name="isPk" columnWidth="12" label="Primary Key" type="boolean" required="true" defaultValue="false">
					<description>Mark the specified attribute as Primary Key&lt;br/&gt;
Default engine name for PK is &lt;i&gt;source_id&lt;/i&gt;. &lt;br/&gt;
If compound or alternative primary key used, all original attributes are concatenated into &lt;i&gt;source_id&lt;/i&gt; attribute instead. 
To reduce duplicate information, there is a possibility to disable storing original attributes in Preference setting.</description>
				</attribute>
				<attribute name="isFk" columnWidth="12" label="Foreign Key" type="boolean" required="true" defaultValue="false">
					<description>Mark the specified attribute as Foreign Key&lt;br/&gt;
There is no default engine name, but &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; pattern is advised. Only the compound foreign key is concatenated into &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; attribute, but the name can be changed by the Alias setting on relationship.
If compound or alternative primary key is used, all original attributes are concatenated into &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; attribute, but the name can be changed by the Alias setting of the particular relationship.&lt;br/&gt;
To reduce duplicate information, there is a possibility to disable storing original attributes in Preference setting.</description>
				</attribute>
				<attribute name="label" label="GUI Label" type="string">
					<description>Enter alias name for this attribute to be shown in the GUI</description>
				</attribute>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
		</node>
		<node id="GuiEditParentColumnsNode" sortChildren="false" name="parentColumns" label="Parent Definition" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiEditParentColumn" max="-1"/>
			</subNodes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[not(parentColumn) and ancestor::masterTable[@entityRole=&#39;silver&#39;] and ancestor::masterModel/guiConfig[@guiMode=&#39;Read-Write&#39; and @enableGui=&#39;true&#39;] and ancestor::guiEdit[@guiReadOnly!=&#39;Read-Only&#39;]]</expression>
					<message>Parent definition (Parent Relationship and Parent Column Name) must be defined for entity which is marked as &#39;silver&#39; (and thus it is not the Top Level Entity) and GUI and the corresponding entity are in Read-Write Mode!</message>
				</validation>
			</validations>
			<description>Defines the relationship to a master parent entity and the foreign key of the corresponding instance entity. &lt;br/&gt;
This setting is usable only for master entities (silver), that are related to a top-level master entity (golden).</description>
		</node>
		<node id="GuiEditParentColumn" name="parentColumn" label="{@name}">
			<attributes>
				<attribute name="relationship" label="Parent Relationship" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/preview/databaseModel/masterTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@name) and @layerName=lower-case($current/ancestor::masterModel/@name)]/relationships/relationship[@name=/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/relationships/relationship/@name]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
					<description>Name of the relationship that links to the parent master entity.
&lt;!-- 1000 --&gt;
&lt;!-- [@childColumn=@$current/@name]
@childColumn=$current/ancestor::physicalTable/columns/column/@name
[@childTable!=$current/ancestor::masterTable/@name] --&gt;</description>
				</attribute>
				<attribute name="name" label="Parent Column Name" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterTable/@instanceTable)]/columns/column[@isFk=&#39;true&#39; and @name=/preview/guiPreview/masterModels/model[@name=$current/ancestor::masterModel/@name]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[@instanceTable=$current/ancestor::masterTable/@instanceTable]/@name)]/columns/column/@name]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
					<description>Foreign key of the corresponding instance entity that is used in a relationship to a parent entity.&lt;br/&gt;
This setting is usable only for master entities (silver), that are related to a top-level master entity (golden).
&lt;!-- 1000 --&gt;
&lt;!-- [@isFk=&amp;#39;true&amp;#39; and @name!=&amp;#39;master_id&amp;#39;] --&gt;</description>
				</attribute>
			</attributes>
			<description>Definition of parent entity link.
&lt;!-- 1000 --&gt;</description>
		</node>
		<node id="AlternativeKeyNode" name="alternativeKey" label="Alternative Key Aliases" expanded="true">
			<attributes>
				<attribute visible="false" name="alternativePk" label="Alternative or Compound Primary Key Alias" type="string">
					<description>Use this option to change default name &lt;i&gt;source_id&lt;/i&gt; of primary key when compound or alternative keys from &lt;i&gt;Connected Systems&lt;/i&gt; are present.&lt;br/&gt;
Note: currently there is no other option to use then &lt;i&gt;source_id&lt;/i&gt;, so this setting is hidden.</description>
				</attribute>
				<attribute name="alternativeFk" label="Compound Foreign Key Alias" type="string">
					<description>Use this option to change default &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; name of foreign key when compound foreign key from &lt;i&gt;Connected Systems&lt;/i&gt; is present.&lt;br/&gt;
Note: this setting is optional, but in case of two different relationships between the same entities, at least one of the relationship alias names has to be used.</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@alternativeFk</selectPath>
					<maxLength>ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed value length {ancestor::logicalModel/instanceModel/tables/table[1]/maxLength/@maxColumnLength} char</message>
				</validation>
			</validations>
			<description>Definition of aliases when compound key (key consisting of more attributes) or alternative key (key of a different name than required by the NME engine) is used.&lt;br/&gt;
Note: compound keys are always concatenated into one default column.&lt;br/&gt;
For compound and alternative primary key &lt;i&gt;source_id&lt;/i&gt; name is always used instead. There are no requirements for foreign key name. Only the compound foreign key is concatenated into &lt;i&gt;&amp;lt;parent_entity&amp;gt;_source_id&lt;/i&gt; attribute, but the name can be changed by the Alias setting on relationship.
</description>
		</node>
		<node id="PkValueNode" visible="false" generated="true" name="pkValue" explorerLeaf="false" expanded="true">
			<attributes>
				<attribute name="valuepk" label="PK Value" type="integer"/>
			</attributes>
		</node>
		<node id="AdvancedSettingsTabNode" visibleInParent="true" name="advanced" newTab="true" label="Advanced Settings" explorerLeaf="true" expanded="true">
			<subNodes>
				<subNode min="1" id="ExtendedSameSystemNode" max="1"/>
				<subNode min="1" id="AlternativeKeyNode" max="1"/>
			</subNodes>
			<description>Additional setting of relationship, such as special type of relationship and alias for compound or alternative foreign key
&lt;!-- 1000 --&gt;</description>
		</node>
		<node id="ExtendedSameSystemNode" name="extendedSameSystem" label="Extended Same System" expanded="true">
			<attributes>
				<attribute name="enable" label="Enable" type="boolean" required="true" defaultValue="false">
					<description>Activate Extended Same System relationship for the particular relationship
&lt;!-- 100 --&gt;</description>
				</attribute>
				<attribute name="parentColumn" label="Column for Parent Entity" type="string">
					<description>Name of a new column for parent table defined in the relationship. 
&lt;!-- 100 --&gt;</description>
				</attribute>
				<attribute name="childColumn" label="Column for Child  Entity" type="string">
					<description>Name of new column for child table defined by this relationship. 
&lt;!-- 100 --&gt;</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@enable=&#39;true&#39; and $current/ancestor::relationship[@type!=&#39;Same System&#39;]]</expression>
					<message>Extended Same System Settings can be enabled only if Relationship Type is Same System.</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@enable=&#39;true&#39; and (@parentColumn=&quot;&quot; and @childColumn=&quot;&quot;)]</expression>
					<message>At least one of parent or child column must be defined.</message>
				</validation>
			</validations>
			<description>Extended type of Same System relationship allows to specify another column for either parent or child entities or for both parent and child entities, where name of a source system is stored to be used to override original value of source system comming from record origin. This definition is used instead of original value of a source system and allows to create the relationship between two records comming from different systems in the same way as using Same System relationship type.
&lt;!-- 100 --&gt;</description>
		</node>
		<node id="MasterAdvancedSettingsNode" name="advanced" newTab="true" label="Advanced Settings" expanded="true">
			<attributes>
				<attribute name="ignoreRelGui" label="Ignore Relationship in GUI" type="boolean" required="true" defaultValue="false">
					<description>If set to true, this relationship is ignored by the GUI.&lt;/br&gt;
Note: this setting mainly prevents cycles during data denormalization into GUI repository (ElasticSearch). Please be aware of consequences of the enabled ignore option: 
&lt;li&gt;&lt;i&gt;GUI model:&lt;/i&gt; this option is usable to disable extra relations that prevent of GUI denormalization process. There should be always one relation between each two entities&lt;/li&gt;
&lt;li&gt;&lt;i&gt;Existing repository:&lt;/i&gt; this option might have some impact on an existing GUI repository, especially if this option is used in the wrong way&lt;/li&gt;
&lt;br/&gt; 
&lt;!-- 1000--&gt;</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="MasterExtendedSameSystemNode" max="1"/>
			</subNodes>
		</node>
		<node id="MasterExtendedSameSystemNode" name="extendedSameSystem" label="Extended Same System" expanded="true">
			<attributes>
				<attribute name="parentColumn" label="Parent Column" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case(/logicalModel/masterModels/masterModel/instanceTables/instanceTable[@name=$current/ancestor::relationship/@parentTable]/@instanceTable)]/columns/column[@extendedSS=&#39;true&#39;]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
				</attribute>
				<attribute name="childColumn" label="Child Column" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case(/logicalModel/masterModels/masterModel/instanceTables/instanceTable[@name=$current/ancestor::relationship/@childTable]/@instanceTable)]/columns/column[@extendedSS=&#39;true&#39;]</selectPath>
						<valueTemplate>{@name}</valueTemplate>
						<labelTemplate>{@name}</labelTemplate>
					</valuesProvider>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[(@parentColumn!=&quot;&quot; or @childColumn!=&quot;&quot;) and ../../@type!=&#39;Extended Same System&#39;]</expression>
					<message>Relationship type from General tab must be Extended Same System.</message>
				</validation>
			</validations>
			<description>Specify a column for this relationship containing the name of the system
&lt;!-- 100 --&gt;</description>
		</node>
		<node id="GuiLinkedRecordsParameterNode" name="linkedRecordParams" label="Linked Record Parameters" expanded="true">
			<attributes>
				<attribute name="firstColumnFormat" label="Label" type="expression">
					<description>Label of record that is 1:N related. There can be constant &#39;Type&#39; or a vaule ${cmo_type}.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_type} convention, otherwise attribute name will be displayed.</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview">
								<selectPath>
<!--
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable[@layerName=$current/ancestor::masterModel/@name]/relationships/relationship[@name=$current/../../@relationship]/@parentTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable[@layerName=$current/ancestor::masterModel/@name]/relationships/relationship[@name=$current/../../@relationship]/@childTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name = $current/ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@bridgedTable]/@instanceTable]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name= $current/ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@bridgedTable]/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]				
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::instanceTable/@name]/@childTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column[@name!=preceding-sibling::column/@name]
|
/preview/databaseModel/instanceTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@layerName=$current/ancestor::masterModel/@name and @name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name!=preceding-sibling::column/@name and @name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
-->						
<!--/preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@parentTable and @layerName=$current/ancestor::masterModel/@name]/columns/column-->

/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@childTable)]/columns/column |
/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@childTable)]/@name)]/columns/column                 

<!-- tvy todo: computed columns should be provided as well -->
<!-- ancestor::masterModel/masterTables/masterTable[@name = /preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@childTable and @layerName=$current/ancestor::masterModel/@name]]/guiTab/computedColumns/column |-->
</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
				<attribute name="secondColumnFormat" label="Value" type="expression">
					<description>Value that provide a brief summary of record that is 1:N related. There is usually a vaule, e.g. ${cmo_value} or ${cmo_street} ${cmo_city}.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_value} convention, otherwise attribute name will be displayed.</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview"><!--/logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/columns/column--><!--<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterTable/@instanceTable]/columns/column</selectPath>            --><selectPath>
<!--                 			
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@parentTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@childTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name = $current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@destTable]/@instanceTable]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]		
|
/preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/masterTables/masterTable[@name=/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@destTable]/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]	
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::instanceTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::instanceTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::instanceTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::masterTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::masterTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::masterTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::masterTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::instanceTable/@name]/@destTable]/guiTab/computedColumns/column
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]						
-->	
	
<!-- /preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@parentTable and @layerName=$current/ancestor::masterModel/@name]/columns/column		-->

/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@childTable)]/columns/column |
/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedList/@relationship]/@childTable)]/@name)]/columns/column                 

</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
			</attributes>
			<description>Definition of information to be display in the GUI when the 1:N relation is displayed.&lt;br/&gt;
There is label and value shown, e.g.: &quot;${cmo_type}: ${cmo_value}&quot; means Email: &quot;info@gmail.com&quot; 


</description>
		</node>
		<node id="GuiMNRelationRecordsParameterNode" name="MNrelationParams" label="MN Relation Parameters" expanded="true">
			<attributes>
				<attribute name="firstColumnFormat" label="Label" type="expression">
					<description>Label of record that is M:N related and it is shown as Relationship.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_type} convention, otherwise attribute name will be displayed.</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview">
								<selectPath>
<!--
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@parentTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@childTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name = $current/ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@bridgedTable]/@instanceTable]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name= $current/ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@bridgedTable]/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]				
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::instanceTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]</selectPath>
-->
<!--
/preview/databaseModel/masterTables/physicalTable[@name = lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable) and @layerName=lower-case($current/ancestor::masterModel/@name)]/columns/column[not(@name=preceding-sibling::column/@name) and @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name] |
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../@relationship)]/@childTable]/@instanceTable)]/columns/column[not(@name=preceding-sibling::column/@name) and @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name]                
 -->
/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable)]/columns/column
| /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable)]/@name)]/columns/column
 
 </selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
				<attribute name="secondColumnFormat" label="Value" type="expression">
					<description>Value of record that is M:N related and it is shown as Relationship.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_type} convention, otherwise attribute name will be displayed.</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview"><!--/logicalModel/instanceModel/tables/table[@name=$current/ancestor::masterTable/@instanceTable]/columns/column--><!--<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterTable/@instanceTable]/columns/column</selectPath>            --><selectPath>
<!--
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@parentTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/masterTables/physicalTable[@name=/preview/databaseModel/masterTables/physicalTable/relationships/relationship[@name=$current/../../@relationship]/@childTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name = $current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@destTable]/@instanceTable]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]		
|
/preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/masterTables/masterTable[@name=/preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name=$current/../../@relationship]/@destTable]/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]	
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::instanceTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @parentTable = $current/ancestor::masterTable/@name]/@childTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::masterTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/relationships/relationship[@name = $current/../../@relationship and @childTable = $current/ancestor::instanceTable/@name]/@parentTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::instanceTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::instanceTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::masterTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/instanceTables/instanceTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::masterTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @destTable = $current/ancestor::masterTable/@name]/@srcTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::masterTable/@name]/@destTable]/guiTab/computedColumns/column
| 
ancestor::masterModel/masterTables/masterTable[@name = /preview/guiPreview/masterModels/model/mnRelationships/mnRelationship[@name = $current/../../@relationship and @srcTable = $current/ancestor::instanceTable/@name]/@destTable]/guiTab/computedColumns/column
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
|
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@parentTable]/@instanceTable and @name!= $current/ancestor::masterTable/@name]/columns/column[@name=&#39;eng_active&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_origin&#39; or tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39;]
-->
<!--
/preview/databaseModel/masterTables/physicalTable[@name = lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable) and @layerName=lower-case($current/ancestor::masterModel/@name)]/columns/column[not(@name=preceding-sibling::column/@name) and @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column/@name] |
/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=/preview/guiPreview/masterModels/model/relationships/relationship[@name=lower-case($current/../../@relationship)]/@childTable]/@instanceTable)]/columns/column[not(@name=preceding-sibling::column/@name) and @name = /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column/@name]                 
-->
/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable)]/columns/column
| /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::masterModel/instanceTables/instanceTable[lower-case(@name)=lower-case($current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable)]/@name)]/columns/column
 
</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
			</attributes>
			<description>Definition of information to be displayed in the GUI from the associative table when the M:N relation is shown as Relationship&lt;br/&gt;
Example: ParentId: ${parent_id} | RelType: ${cmo_p2p_rel_type}
    Active: ${eng_active} | Updated: ${eng_mtdt}</description>
		</node>
		<node id="GuiDetailListsNode" sortChildren="false" name="lists" label="Instance Lists" expanded="true">
			<subNodes>
				<subNode min="0" id="GuiDetailListNode" max="-1"/>
			</subNodes>
			<description>Definition of a different views to instance records.</description>
		</node>
		<node id="GuiDetailListNode" name="list" label="List">
			<subNodes>
				<subNode min="1" id="GuiViewRelatedEntityColumnListNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="name" label="List View Name" type="string">
					<description>Name of one particular List View</description>
				</attribute>
				<attribute name="label" label="List View Label" type="string">
					<description>Label of one particular List View</description>
				</attribute>
				<attribute name="columnMask" label="Column Mask" type="string">
					<description>Definition of mask for the column selection using regular expression syntax, e.g. &lt;i&gt;^std_*, &quot;^src_* &lt;/i&gt;.&lt;br/&gt;
Note: If a combination of listed column and mask is used, listed columns are shown first and columns by mask are added et the end.</description>
				</attribute>
			</attributes>
			<description>Definition of one of the instance record view</description>
		</node>
		<node id="GuiMNLinkedRecordsParameterNode" name="MNlinkedRecordsParams" label="Linked Records Parameters" expanded="true">
			<attributes>
				<attribute name="firstColumnFormat" label="Label" type="expression">
					<description>Label of record that is M:N related and it is shown as Linked Record. There can be constant &#39;Person&#39; or a vaule ${cmo_type} that typically comes from the linked entity.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_type} convention, otherwise attribute name will be displayed.</description>
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview">
								<selectPath> 
<!--/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel[guiConfig/@enableGui=&#39;true&#39;]/instanceTables/instanceTable[@name=$current/ancestor::labeledRelatedMNList/@entity_out]/@instanceTable]/columns/column
|/preview/databaseModel/masterTables/physicalTable[@name=$current/ancestor::masterModel[guiConfig/@enableGui=&#39;true&#39;]/masterTables/masterTable[@name=$current/ancestor::labeledRelatedMNList/@entity_out]/@instanceTable]/columns/column
-->
<!-- previously used
/preview/databaseModel/masterTables/physicalTable[@name = $current/ancestor::masterModel/relationships/relationship[@name = $current/ancestor::labeledRelatedMNList/@relationship]/@childTable and @layerName=$current/ancestor::masterModel/@name]/columns/column |
/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::masterModel/instanceTables/instanceTable[@name=/preview/guiPreview/masterModels/model/relationships/relationship[@name=$current/../../@relationship]/@childTable]/@instanceTable]/columns/column -->

/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column
| /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column

							</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
				</attribute>
				<attribute name="secondColumnFormat" label="Value" type="expression">
					<expressionProvider class="com.ataccama.ame.core.expressions.SemiExpressionPathValuesProvider">
						<sources>
							<source name="preview">
								<selectPath>
/preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/instanceTables/instanceTable[@name=lower-case($current/ancestor::instanceTable/@name)]/columns/column
| /preview/guiPreview/masterModels/model[@name=lower-case($current/ancestor::masterModel/@name)]/masterTables/masterTable[@name=lower-case($current/ancestor::masterTable/@name)]/columns/column						
							</selectPath>
								<nameTemplate>{@name}</nameTemplate>
								<dataTypeTemplate>{@type}</dataTypeTemplate>
								<labelTemplate>{@schema}.{@name}</labelTemplate>
							</source>
						</sources>
					</expressionProvider>
					<description>Value that provide a brief summary of record that is M:N related and it is shown as Linked Record. There is usually a vaule, e.g. ${cmo_company_name} ${cmo_first_name} ${cmo_last_name}.&lt;br/&gt;
Note: if you want to display a value, always use the ${cmo_company_name} convention, otherwise attribute name will be displayed.</description>
				</attribute>
			</attributes>
			<description>Definition of information to be displayed in the GUI when the MN relation is shown as Linked Record.&lt;br/&gt;
Example: &quot;Person: ${cmo_first_name} ${cmo_last_name}&quot;&lt;br/&gt;
    &quot;Company: ${cmo_company_name}&quot;
&lt;!-- 1000 --&gt;</description>
		</node>
		<node id="AggregationTabNode" name="aggregationTab" newTab="true" label="Aggregation" expanded="true">
			<attributes>
				<attribute name="aggregation" label="Enable Aggregation" type="boolean" required="true" defaultValue="false">
					<description>Check this option to enable Aggregation process for this entity, i.e. an aggregation transformation will be created
&lt;!-- 10.3.0 --&gt;</description>
				</attribute>
				<attribute name="groupingColumn" label="Grouping Column" type="string" required="false">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="false">
						<selectPath>/preview/databaseModel/instanceTables/physicalTable[@name=lower-case($current/ancestor::table/@name)]/columns/column[@origin!=&#39;aggregation&#39; and @name!=&#39;id&#39; and @eng=&#39;false&#39; 
    and (@type=&#39;long_int&#39; or @type=&#39;long&#39; or @type=&#39;integer&#39; or @type=&#39;string&#39;) ]/@name</selectPath>
					</valuesProvider>
					<description>Select a column that will be used to group records and perform aggregation calculations over the group. Typically &lt;i&gt;master_id&lt;/i&gt; is used.&lt;br/&gt;
Use only columns with following data types: &lt;i&gt;long&lt;/i&gt;, &lt;i&gt;long_int&lt;/i&gt;, &lt;i&gt;integer&lt;/i&gt; and &lt;i&gt;string&lt;/i&gt;
&lt;!-- 10.3.0 --&gt;</description>
				</attribute>
			</attributes>
			<subNodes>
				<subNode min="1" id="AggregationTabColumnsNode" max="1"/>
			</subNodes>
			<description>Definiton of Aggregation layer 

&lt;!-- 10.3.0 --&gt;</description>
		</node>
		<node id="AggregationTabColumnsNode" name="aggregationTabColumns" label="Aggregation Columns" explorerLeaf="false" expanded="true">
			<subNodes>
				<subNode min="0" id="AggregationTabColumnNode" max="-1"/>
			</subNodes>
			<description>List of columns participating in Aggregation process. Use these columns to store the aggregation results
&lt;!-- 10.3.0 --&gt;</description>
		</node>
		<node id="AggregationTabColumnNode" inherits="GeneralColumnNode" name="aggregationTabColumn" label="{@name}:{@type}">
			<attributes>
				<attribute name="description" label="Description" type="text">
					<description>Attribute description</description>
				</attribute>
			</attributes>
			<description>A column participating in Aggregation process, i.e. to store an aggregation result 
&lt;!-- --&gt;</description>
		</node>
		<node id="MatchingDefinitionsNode" name="matchingDefinitions" label="Core Matching Columns Definitions" expanded="true">
			<subNodes>
				<subNode min="0" id="MatchingDefinitionNode" max="-1"/>
			</subNodes>
			<description>Attributes that uniquelly define each matching &quot;operation&quot;</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>matchingDefinition/@name</selectPath>
					<message>&#39;{.}&#39; is not unique value for attribute &#39;name&#39;</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>matchingDefinition/@masterIdColumn</selectPath>
					<message>&#39;{.}&#39; is not unique value for attribute &#39;masterIdColumn&#39;</message>
				</validation><!-- <validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
  				<selectPath>matchingDefinition/@idKeeperFlagColumn</selectPath>
  				<message>&#39;{.}&#39; is not unique value for attribute &#39;idKeeperFlagColumn&#39;</message>
			</validation>	--><validation class="com.ataccama.ame.core.validations.UniqueValuesValidation">
					<selectPath>matchingDefinition[@isolateFlagColumn!=&#39;&#39;]/@isolateFlagColumn</selectPath>
					<message>&#39;{.}&#39; is not unique value for attribute &#39;isolateFlagColumn&#39;</message>
				</validation>
			</validations>
		</node>
		<node id="MatchingDefinitionNode" name="matchingDefinition" label="Core Matching Columns Definition">
			<attributes>
				<attribute name="name" label="Name" type="string" required="true">
					<description>Name is used in Matching step and it referes to Repository Name. If default name is used, the step&#39;s setting is optional (k is as default).</description>
				</attribute>
				<attribute name="masterIdColumn" label="Master Id Column" type="string" required="true">
					<description>Attribute, where the master group id is stored.</description>
				</attribute><!--<attribute visible="false" name="idKeeperFlagColumn" label="ID Keeper Flag Column" type="string" required="false">
					<description>Attribute that helps to keep and hold master group id, i.e. it supports the id stability.</description>
				</attribute>--><attribute name="isolateFlagColumn" label="Isolate Flag Column" type="string">
					<description>Attribute that is used when split &amp; isolate manual match exception is applied, i.e. the master group with isolated record(s) cannot be used for adding a new records into the group.</description>
				</attribute>
				<attribute name="rematchFlagColumn" label="Rematch Flag Column" type="string">
					<description>Attribute that is used to force Matching to recompute match result even the record is already matched. Default behaviour (flag is false) means the match result stays the same even the record is updated.&lt;/br&gt;
Note: more matchings can use the same Rematch Flag for more matchings (highly recommended when the matchings are hierarchical).</description>
				</attribute>
			</attributes>
			<description>Definition of core matching attributes</description>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@name = ../../../matchingTabColumns/column/@name and ../../../multipleMatching/@disableDefault=&#39;false&#39;]</expression>
					<message>&#39;{@name}&#39; is not unique value for attribute &#39;name&#39;, this value is used in matching columns</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@name = ../../../defaultMatchingDefinition/@name and ../../../multipleMatching/@disableDefault=&#39;false&#39;]</expression>
					<message>&#39;{@name}&#39; is not unique value for attribute &#39;name&#39;, this value is used in default matching definition</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@masterIdColumn = ../../../defaultMatchingDefinition/@masterIdColumn and ../../../multipleMatching/@disableDefault=&#39;false&#39;]</expression>
					<message>&#39;{@masterIdColumn}&#39; is not unique value for attribute &#39;masterIdColumn&#39;, this value is used in default matching definition</message>
				</validation><!-- <validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
        	   		<expression>.[@idKeeperFlagColumn = ../../../defaultMatchingDefinition/@idKeeperFlagColumn and ../../../multipleMatching/@disableDefault=&#39;false&#39;]</expression>
    	       		<message>&#39;{@idKeeperFlagColumn}&#39; is not unique value for attribute &#39;idKeeperFlagColumn&#39;, this value is used in default matching definition</message>
	       		</validation> --><validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[@isolateFlagColumn = ../../../defaultMatchingDefinition/@isolateFlagColumn and ../../../multipleMatching/@disableDefault=&#39;false&#39;]</expression>
					<message>&#39;{@isolateFlagColumn}&#39; is not unique value for attribute &#39;isolateFlagColumn&#39;, this value is used in default matching definition</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@masterIdColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation><!-- <validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
  					<selectPath>@idKeeperFlagColumn</selectPath>
  					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
  					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation> --><validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@isolateFlagColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@rematchFlagColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>ancestor::multipleMatching/maxLength/@maxInstMatchTableLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::multipleMatching/maxLength/@maxInstMatchTableLength} char</message>
				</validation>
			</validations>
			<subNodes>
				
			
			</subNodes>
		</node>
		<node id="DefaultMatchingDefinitionNode" generated="true" name="defaultMatchingDefinition" label="Default Core Matching Columns" expanded="true">
			<attributes>
				<attribute name="name" label="Name" type="string">
					<description>Name is a parameter in the Matching step. It references the Matching Repository Name.&lt;br/&gt;
The name is optional in the Matching step configuration when using default&lt;br/&gt;
Default is: &lt;kbd&gt;k&lt;/kbd&gt;</description>
				</attribute>
				<attribute visible="true" name="masterIdColumn" label="Master Id Column" type="string">
					<description>Stores the resulting ID from the matching operation for each group of records</description>
				</attribute><!--<attribute name="idKeeperFlagColumn" label="Id Keeper Flag Column" type="string">
					
				<description>The flag denotes the master group ID holder record. It supports the master group ID stability (e.g. &lt;kbd&gt;master_id&lt;/kbd&gt;)</description>
				</attribute>--><attribute name="isolateFlagColumn" label="Isolate Flag Column" type="string">
					<description>When set to &lt;kbd&gt;true&lt;/kbd&gt;, the record will be isolated and will not take part in matching with other records.&lt;br/&gt;
For more details see &lt;i&gt;Manual Match Exceptions&lt;/i&gt; in the Reference Documentation</description>
				</attribute>
				<attribute name="rematchFlagColumn" label="Rematch Flag Column" type="string">
					<description>Use the flag to force recomputation of the matching group. The flag is not persisted in MDC storage. If set to &lt;kbd&gt;true&lt;/kbd&gt;, record is rematched and might change its master group id.
If false or empty the matching result remains the same although the record is updated.
Default is &lt;i&gt;empty&lt;/i&gt; or &lt;kbd&gt;false&lt;/kbd&gt;</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@masterIdColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation><!-- <validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
  					<selectPath>@idKeeperFlagColumn</selectPath>
  					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
  					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation> --><validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@isolateFlagColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@rematchFlagColumn</selectPath>
					<maxLength>ancestor::table/maxLength/@maxColumnLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::table/maxLength/@maxColumnLength} char</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MaxLengthValidation">
					<selectPath>@name</selectPath>
					<maxLength>maxLength/@maxInstMatchTableLength</maxLength>
					<message>Value &#39;{.}&#39; exceeds maximum allowed length {ancestor::multipleMatching/maxLength/@maxInstMatchTableLength} char</message>
				</validation>
			</validations>
			<subNodes>
				<subNode min="1" id="GeneratedInstanceMaxLengthNode" max="1"/>
			</subNodes>
			<description>The following columns are used as the default setting for matching step. If you wish to change the names or set up multiple grains of matching results, navigate to &lt;i&gt;Advanced Matching Configuration&lt;/i&gt; at the bottom of this tab.&lt;/br&gt;
Note: if you changed the &lt;i&gt;Enable Matching&lt;/i&gt; setting, please click to &lt;i&gt;Apply&lt;/i&gt; to refresh the values
&lt;!-- 1030 --&gt;
</description>
		</node>
		<node id="MultipleMatchingNode" name="multipleMatching" label="Advanced Matching Configuration">
			<subNodes>
				<subNode min="1" id="GeneratedInstanceMaxLengthNode" max="1"/>
				<subNode min="1" id="MatchingDefinitionsNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="disableDefault" label="Disable Default Matching Definition" type="boolean" required="true" defaultValue="false">
					<description>Default Matching Definition will not be used. When this option is set to &lt;i&gt;true&lt;/i&gt;, there has to be at least one Matching definition below.
</description>
				</attribute>
			</attributes>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[(@disableDefault=&#39;true&#39; or matchingDefinitions/matchingDefinition) and /settings/advancedSettings/@matchingCompatibility=&#39;true&#39;]</expression>
					<message>If Matching Compatibility Mode is used, Advanced Matching Configuration should not be used!</message>
				</validation>
			</validations>
			<description>Enables the MDM Hub to perform more matchings on the instance data, i.e. more Matching steps can be used.&lt;br/&gt;
Note: Matching attributes defined in the Matching tab are used for all matchings, i.e. there is only one definition of matching columns regardless if single or multiple matching is set up 
&lt;!-- 10.3.0 --&gt;</description>
		</node>
		<node id="CopyAfterP2CNode" visible="false" generated="true" name="copyAfterP2C">
			<attributes>
				<attribute name="name" type="string"/>
			</attributes>
		</node>
		<node id="CopyAfterC2PNode" visible="false" generated="true" name="copyAfterC2P">
			<attributes>
				<attribute name="name" type="string"/>
			</attributes>
		</node>
		<node id="reduceColumnsNode" name="reduceColumns" label="GUI Restricted Columns" explorerLeaf="false" expanded="true">
			<subNodes>
				<subNode min="0" id="reduceColumnNode" max="-1"/>
			</subNodes>
			<attributes/>
			<validations>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[../@allColumns=&#39;true&#39; and reduceColumn]</expression>
					<message>Option Load All Columns is enabled even some Selected Columns are defined!</message>
				</validation>
				<validation class="com.ataccama.ame.core.validations.MDPathValidation" inverseCondition="true">
					<expression>.[../@allColumns=&#39;false&#39; and not(reduceColumn)]</expression>
					<message>Option Load All Columns is disabled and there are no columns defined!</message>
				</validation>
			</validations>
			<description>List of attributes that going to be loaded into Elasticsearch including a selected type of indexing.
&lt;!-- 1050 --&gt;</description>
		</node>
		<node id="reduceColumnNode" generated="false" name="reduceColumn" label="Reduced Column" expanded="true">
			<attributes>
				<attribute name="name" label="Name" type="string">
					<valuesProvider class="com.ataccama.ame.core.assist.PathValuesProvider" fillColumns="true">
						<selectPath>
	/preview/databaseModel/instanceTables/physicalTable[@name=$current/ancestor::instanceTable/@instanceTable]/columns/column[tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39; or @name=&#39;eng_origin&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_last_update_date&#39; or @name=&#39;eng_source_timestamp&#39;]
	|
	/preview/databaseModel/masterTables/physicalTable[@name=$current/ancestor::masterTable/@name and @layerName=$current/ancestor::masterModel/@name]/columns/column[tokenize(@name,&#39;_&#39;,1)!=&#39;eng&#39; or @name=&#39;eng_origin&#39; or @name=&#39;eng_source_system&#39; or @name=&#39;eng_last_update_date&#39;]
	</selectPath>
						<valueTemplate>{lower-case(@name)}</valueTemplate>
						<labelTemplate>{lower-case(@name)}</labelTemplate>
					</valuesProvider>
					<description>Name of an attribute that is loaded into the Elasticsearch and it will be available in the GUI</description>
				</attribute>
				<attribute name="indexType" label="Index Type" type="enum" enumValues="ANALYZED,NOT_ANALYZED,BOTH,NONE">
					<description>Deterimes the Elasticsearch indexing method:
&lt;ul&gt;&lt;li&gt;&lt;kbd&gt;empty&lt;/kbd&gt;: if the index type is empty, it actually means the default value is used, i.e. index type BOTH.&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;BOTH&lt;/kbd&gt;: column is indexed in ANALYZED and also in NOT_ANALYZED way (default)&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;ANALYZED&lt;/kbd&gt;: column is indexed for both global (full text) index and local (column) index; for string data types Elastic Search performs parsing based on some special characters e.g. space, dot (each part is indexed separately)&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;NOT_ANALYZED&lt;/kbd&gt;: column is indexed for both global (full text) index and local (column) index as it comes from the MDC (including spaces, dots, etc.)&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;NONE&lt;/kbd&gt;: column is not indexed neither in global (full text) index nor in local column index&lt;/li&gt;&lt;/ul&gt;
&lt;!-- 1050 --&gt;</description>
				</attribute>
			</attributes>
			<subNodes/>
			<description>A column that going to be loaded into Elasticsearch including a selected type of indexing.
&lt;!-- 1050 --&gt;</description>
		</node>
		<node id="cc" name="cc">
			<attributes>
				<attribute name="name" type="string"/>
			</attributes>
		</node>
		<node id="reduceESNode" name="reduceES" label="Restrict GUI Columns">
			<subNodes>
				<subNode min="1" id="reduceColumnsNode" max="1"/>
			</subNodes>
			<attributes>
				<attribute name="allColumns" label="Load All Columns" type="boolean" required="true" defaultValue="true">
					<description>All columns that are avalable in the MDC are also available in the GUI with default type of indexing method. 
&lt;!-- 1050 --&gt;</description>
				</attribute>
			</attributes>
			<description>GUI loads and indexes all entities and all attributes, that are stored in the MDC in the Elastisearch by default. Unfortunately, it might be both redundant and also limiting the performance. &lt;/br&gt;
This option enable to restrict number of attributes that are loaded into Elasticsearch AND/OR setup the way how each attribute is indexed!
&lt;!-- 1050 --&gt;</description>
		</node>
	</nodes>
</metametadata-library>